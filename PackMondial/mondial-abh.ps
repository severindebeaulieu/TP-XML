%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86d Copyright 1999 Radical Eye Software
%%Title: mondial-abh.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips mondial-abh
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.11.21:2011
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro
%!
% PostScript prologue for pst-coil.tex.
% Version 97 patch 1, 98/06/02
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { /t ED t sin AspectSin mul t 180 div AspectCos mul add t cos
lineto } def
/Coil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /ArmB ED /ArmA ED
/h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED x0 y0 translate y1 y0 sub x1 x0
sub 2 copy Pyth /TotalLength ED Atan rotate /BeginAngle ArmA AspectCos
Div w h mul Div 360 mul def /EndAngle TotalLength ArmB sub AspectCos Div
w h mul Div 360 mul def 1 0 0 0 ArrowA ArmA 0 lineto /mtrx CM def w h
mul 2 Div w 2 Div scale BeginAngle Inc EndAngle { CoilLoop } for
EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
TotalLength 0 ArrowB lineto
pop pop pop pop } def
% DG/SR modification end
/AltCoil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /h ED /w ED
/EndAngle ED /BeginAngle ED /mtrx CM def w h mul 2 Div w 2 Div scale
BeginAngle sin AspectSin mul BeginAngle 180 div AspectCos mul add
BeginAngle cos /lineto load stopped { moveto } if BeginAngle Inc
EndAngle { CoilLoop } for EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { /ArmB ED /ArmA ED 2 div /w ED w mul /h ED /y1 ED /x1 ED /y0 ED
/x0 ED x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth /TotalLength ED
Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
sub 2 div dup ArmA add /ArmA ED ArmB add /ArmB ED /x ArmB h 2 div add
def mark 0 0 ArmB 0 n { x w /w w neg def /x x h add def } repeat
TotalLength ArmA sub 0 TotalLength 0 } def
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (mondial-abh.dvi)
@start
%DVIPSBitmapFont: Fa lasy10 10 2
/Fa 2 4 df<EF0180EF07C0171F177FEE01FFEE07FBEE1FE3EE7F83923801FE03ED07F8
ED1FE0ED7F80913801FE00EC07F8EC1FE0EC7F80D901FEC7FCEB07F8EB1FE0EB7F80D801
FEC8FCEA07F8EA1FE0EA7F8000FEC9FCA2EA7F80EA1FE0EA07F8EA01FE38007F80EB1FE0
EB07F8EB01FE9038007F80EC1FE0EC07F8EC01FE9138007F80ED1FE0ED07F8ED01FE9238
007F83EE1FE3EE07FBEE01FFEE007F171F1707EF0180323279AD41>1
D<126012F812FE6C7E13E0EAF7F8EAF1FE38F07F80EB1FE0EB07F8EB01FE9038007F80EC
1FE0EC07F8EC01FE9138007F80ED1FE0ED07F8ED01FE9238007F80EE1FE0EE07F8EE01FE
9338007F80EF1FC0A2EF7F80933801FE00EE07F8EE1FE0EE7F80DB01FEC7FCED07F8ED1F
E0ED7F80DA01FEC8FCEC07F8EC1FE0EC7F80D901FEC9FCEB07F8EB1FE0EB7F80D8F1FECA
FCEAF7F8EAFFE0138048CBFC12F81260323279AD41>3 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr10 10 31
/Fb 31 123 df<EC07FC91387FFF7049B512F0903803FC0790380FE00FEB1FC0EB3F005B
017E130713FE5B1201ACB7FCA33901FC0007B3AB486C497E267FFFF1B512C0A32A3B7FBA
2E>13 D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A7A8917>46
D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>
49 D<EB0FF0EB7FFE48B57E3903E03FC03907800FE0390E0007F0486D7E48806E7E5A6E
7E127CB4FC16807F157FA26CC7FCA2001C14FFC8FC1600A25C5D5D14035D4A5A4A5A5D4A
5A4AC7FC143E5C5C495A495A495A5C49C8FC011EEB03805B5B491307484814005B485A48
C75A48B6FC5A5A485CB6FCA321387CB72A>I<B712C016F816FE000190398001FF806C90
C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418
FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE048
6DEBFF80B8C7FC16F816C036397DB83F>68 D<DBFF8013C0020FEBF001023F13FC9139FF
803E03903A03FC000F87D907F0EB03CFD91FC0EB01EF4948EB007F49C8FC01FE153F4848
151FA24848150F485A000F16075B001F1603A2485AA21701127FA25B94C7FC12FFAA93B6
FC127FA26D9138007FE0EF3FC0123FA36C7EA26C7EA212076C7E6C7EA26C7E017F157F6D
7ED91FE014EFD907F0EB01C7D903FCEB0783903A00FFC03F0191393FFFFE00020F01F813
0002001380383D7CBA41>71 D<B712C016F816FE000190398001FF806C90C7EA3FC0EE0F
E0EE07F0EE03F817FC17FE1601A217FFA717FEA2160317FC17F8EE07F0EE0FE0EE3FC092
3801FF8091B5EAFE0016F816C091C9FCB3A4487FB6FCA330397DB839>80
D<003FB812E0A3D9E003EB003F90260001FE1307007EEE03F0007C160100781600A30070
1770A400F01778481738A4C71600B3B0913807FF80011FB612E0A335397DB83C>84
D<EB3FE0EBFFFC000313FF3907C03F80390F800FC0486C6C7E01E07F6E7EA2380FC001D8
07807FEA0300C7FCA414FF130FEB7FF13801FF01EA07F8EA0FF0EA1FE0EA3FC0EA7F80A2
D8FF00141CA41403A2387F800714063A3FC01C7E383A1FF0787FF83A0FFFF03FF0000301
E013E03A007F000F8026277DA52A>97 D<EA03F812FFA3120F1203B0EC0FE0EC7FFC9038
F9FFFE9039FBE03F809039FF800FC09039FE0007E049EB03F0A249EB01F816FCA216FE15
00A216FFA916FEA3150116FCA2ED03F86D14F0ED07E06DEB0FC09039E7801F809039E3E0
7F009038C1FFFE9038807FF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF80017F13E090
38FE01F03901F800F83903F001FC3807E003EA0FC0121F90388001F8003FEB00F0156000
7F140090C8FCA25AA97EA27FA2003F140E7F001F141C6C7E000714386C7ED801FC13F039
00FF03E090387FFFC0011F1300EB07F81F277DA525>I<ED1FC0EC07FFA3EC007F151FB0
EB07F8EB1FFE90387FFF9F9038FE07DF3901F800FF4848137F4848133F4848131F121F48
5AA2127F90C7FCA35AA97EA27F123FA2121F6C6C133F157F6C6C13FF3A03F001DFF03A01
FC079FFF39007FFF1FEB3FFED907F013C0283B7DB92E>I<EB07F8EB1FFF017F13809038
FC0FC03901F003E03903E001F0000714F8390FC000FC121F4913FE003F147EA248C7127F
A35A90B6FCA390C8FCA57EA27F123F15076C7E150E6C7E0007141C6C6C133CD801FC1378
3900FF01F090383FFFC06D1380903803FC0020277EA525>I<147E903803FF80010F13C0
90381FC7E090383F07F0EB7E0F13FE13FC0001EB07E09038F803C0000390C7FCADB512FC
A3D803F8C7FCB3AB487EB512F8A31C3B7FBA19>I<ED03E090390FF00FF090393FFC1FF8
90B5EA3C7C3A01F81FF0FC3A03E007C07C3A07C003E038000FECF000001F80EB8001003F
80A7001F5CEBC003000F5C00075C6C6C485A9038F81F800006B5C7FCEB3FFC380E0FF090
C9FC121EA3121F6C7E90B512C015F86C14FE6CECFF8016C04815E0391F80007F48C7EA0F
F0007E140316F8481401A5007EEC03F0A26CEC07E06C6CEB0FC0D80FE0EB3F803A07FC01
FF000001B512FC6C6C13F0010790C7FC26387EA52A>I<EA03F812FFA3120F1203B0EC07
F0EC1FFCEC7FFF9138F07F809038F9C01FD9FB807F9038FF000F49805BA35BB3A4486C49
7EB500E1B51280A3293A7EB92E>I<EA03C0487E487E487EA46C5A6C5A6C5AC8FCA9EA01
F812FFA312071203B3AA487EB512E0A313387EB718>I<EA03F812FFA3120F1203B19138
03FFFCA36E13C0913800FE005D15F04A5A4A5A4A5A4AC7FC141E5C5C14FCEBF9FE13FBEB
FF7F496C7EEBFC1F01F87F6E7E6E7EA26E7E6E7EA26E7E157FA2ED3F8016C0486CEB7FF0
B500E1B5FCA3283A7EB92C>107 D<EA03F812FFA3120F1203B3B3AD487EB512E0A3133A
7EB918>I<2703F807F8EB0FF000FFD91FFEEB3FFCDA7FFFEBFFFE913AF03F81E07F3D0F
F9C00FC3801F802603FB80D9E7007F020013E601FED907FC6D7EA2495CA2495CB3A4486C
496C497EB500E1B500C3B51280A341257EA446>I<3903F807F000FFEB1FFCEC7FFF9138
F07F80390FF9C01F2603FB807F9038FF000F49805BA35BB3A4486C497EB500E1B51280A3
29257EA42E>I<EB03FE90380FFF80013F13E09038FE03F83901F800FC4848137E48487F
4848EB1F80001F15C049130F003F15E0A248C7EA07F0A44815F8A96C15F0A26D130F003F
15E0A26C6CEB1FC0000F15806D133F6C6CEB7F006C6C13FE3900FE03F890387FFFF0011F
13C0D903FEC7FC25277EA52A>I<3903F80FE000FFEB7FFC9038F9FFFE9039FBE07F803A
0FFF801FC03A03FE000FE049EB07F0A249EB03F816FC150116FEA3ED00FFA916FE1501A3
16FC150316F86DEB07F0ED0FE06D14C09039FF803F809039FBE07F009038F9FFFE9038F8
7FF8EC1FC091C8FCAB487EB512E0A328357EA42E>I<3803F03F00FFEB7F809038F1FFE0
14C7390FF38FF03803F70F13F69038FE07E09038FC03C0EC018091C7FCA25BB3A3487EB5
12F8A31C257EA421>114 D<EBFF83000313E7000F13FFEA1F80383E003F487F00787FA2
00F87FA37E6C90C7FC6C7EEA7FF8EBFF806C13E06C13F86C7F6C7F00017F6C7E01031380
EB003F0060EB1FC000E0130FA26C1307A37E15806C130F1500B4131EEBC07C38F3FFF800
E15B38C07F801A277DA521>I<131CA5133CA3137CA213FC120112031207121FB6FCA3D8
01FCC7FCB2EC01C0A93900FE0380A2017E13006D5AEB1FFE6D5AEB03F01A347FB220>I<
D803F8EB0FE000FFEB03FFA3000FEB003F0003140FB3A5151FA2153F1201156F6C6CEBEF
F8903A7E03CFFF8090383FFF8F6D130FD903FCEBE00029267EA42E>I<B538C07FFEA33A
0FFC001FF0D803F8EB07C016807F00011500A26D5B0000140EA2017F5BA2EC803C013F13
38A26D6C5AA214E0010F5BA214F101075BA2903803FB80A214FF6D90C7FCA36D5AA2147C
A3143827257EA32C>I<B53A8FFFF07FFEA3260FF8009038800FF8000791397F0007E0EF
03C000031780816DEC80070001027F1400A26D6E5A000002FF130E15EF6DECE01ED97F01
141C15C70281EBF03CD93F8314381583D91FC36D5AECC701A2D90FE76D5AECEE00A2D907
FEEBFFC04A137FA201035D4A133FA2010192C7FC4A7FA20100141E4A130E37257EA33C>
I<B538C07FFEA33A07FC001FF06C48EB07C016807F00011500A26C6C130EA26D131E6D13
1CA26D6C5AA2ECC078011F1370A2ECE0F0010F5B14F0903807F1C0A214FB01035BA26DB4
C7FCA36D5AA2147CA31438A214781470A25CA21301007C5BEAFE035C130749C8FCEAFC1E
EA783CEA3FF86C5AEA0FC027357EA32C>121 D<003FB512FCA39038C007F8D83E0013F0
003C130FEC1FE0003814C00078EB3F80147F0070EBFF005C1301495A5CEA0007495A5C49
5A133F90387F800E14005B485A5B0003141E485A5B4848131C001F143C4848137C4913FC
007F1303B6FCA31F247EA325>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmbx10 10 33
/Fc 33 123 df<DB3FFC14C00203B5EAC003021FECF00791B6EAFC0F0103EDFE1F499039
FC00FFBF011F01C0EB1FFF4948C71207D97FF8804948804849804849157F4849153F91C9
FC48171F485A180F123F5B1807127FA25B95C7FC12FFAB127FA26DEE07C0A2123FA27F00
1FEF0F80A26C7E6CEF1F00806C6D153E6C6D157E6C6D5D6D6C4A5AD93FFEEC07F090261F
FFC0EB1FE0010701FCEBFFC06D90B6C7FC01005D021F14F8020314C09126003FFEC8FC3A
3B7BB945>67 D<B87E17F817FF18C018F028007FFC00077F9338007FFEEF1FFF05071380
7113C0837113E019F0187F19F8183F19FC181FA219FEA419FFAC19FEA419FC183FA219F8
187F19F0F0FFE05F4D13C04D1380051F1300EF7FFE933803FFFCB912F018C095C7FC17FC
178040397DB849>I<B912F0A528007FFC000113F8EE003F170F17071703A21701A21700
A2163E18FC187CA4047E1300A216FE150391B5FCA5ECFC031500167E181F163EA2183EA4
93C7127EA2187C18FCA21701A21703EF07F8170F173FEE03FFB9FCA218F0A338397DB83F
>I<DB3FFC14C00203B5EAC003021FECF00791B6EAFC0F0103EDFE1F499039FC00FFBF01
1F01C0EB1FFF4948C71207D97FF8804948804849804849157F4849153F91C9FC48171F48
5A180F123F5B1807127FA25B95C8FC12FFAA047FB61280127FA27FA2003FDB0007EBC000
A27F121FA26C7E7E806C7F6C7F6C7F6D7ED93FFE5C90261FFFC05B010701FC90B5FC6D90
B5EAFE7F0100EDFC1F021FECF0070203ECC0009126003FFEC9FC413B7BB94B>71
D<B612FEA539007FFC00B3B3ABB612FEA51F397EB824>73 D<B77EA526007FFCC9FCB3AA
EF0F80A5171F1800A35FA35F5FA25E16075EEE7FFEB8FCA531397DB839>76
D<B500FC0407B512F06E5E6E5EA3C66C6D4BEBE000A2017D6D157DA2017C6D15F9A36E6C
EC01F1A26E6CEC03E1A26E6CEC07C1A36E6CEC0F81A26E6CEC1F01A26E6D133EA36E6D13
7CA26E6D13F8A292397FF001F0A392393FF803E0A292391FFC07C0A292390FFE0F80A392
3907FF1F00A26F13BEA26F13FCA36F5BA2705AA2705AB500FE0303B612F0A2EE1FC0A2EE
0F8054397DB85B>I<EDFFF8020FEBFF80027F14F049B612FC01079038C01FFF90271FFE
000313C0D93FF801007F49486E7E49486E7E48496E7E48496E7E488391C87E48486F1380
A2001F18C04981003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0A26D
5D001F18C06D5D6C18806C6D4A1300A26C6D4A5A6C6D4A5A6C6D4A5AD97FFC49485A6D6C
495B90271FFFC01F5B010790B6C7FC010115FC6D6C14F0020F1480020001F8C8FC3D3B7B
B948>79 D<B8FC17F017FE8318C028007FFC000713E0040113F09338007FF8EF3FFCA218
FE171FA218FFA718FEA2173F18FCA2EF7FF8933801FFF0040F13E091B71280180017FC17
E002FCC9FCB3A2B612FEA538397DB841>I<B712FCEEFFE017FC17FF18C028007FFC000F
7F04017F706C7E717EA2717EA284A760173F604D5A4D5A4C5B040F5B91B7C8FC17FC5F17
FE913AFC003FFF80040F7F707F82707FA2707FAB1AE0F101F0A2EF7FFC1AE0B600FE9038
3FFE0394381FFF0771EBFFC00503148005001400CBEA0FFC443A7DB848>82
D<D903FF1306013FEBE00E90B5EAF83E48ECFE7E48ECFFFE3807FE01390FF0003F484813
0F484813031501485A1500167E12FFA2163E7F7F7F6D91C7FCEBFF806C13F8ECFFC015FC
6C14FF6C8116E06C816C816C816C816C7E011F801307D9003F14801403EC001F030713C0
818100788012F8167FA36C1680A27EEEFF007E6D5C01E0130101F8495A9039FF801FF891
B55A00FC5DD8F83F1480D8E00749C7FC39C0007FF02A3B7BB935>I<EB3FFE0003B512E0
4814F84880391FF007FE393FF801FF6E7F82157F6C4880A26C5AEA0380C8FCA291B5FC13
0F90B6FC0003EBF87F481380381FFC00485A5B485A485AA515FF6C6C5A6C6C487F903AFC
0FBFFFC06CB5123F0007497E6CEBF80F39007FC0032A257DA42E>97
D<13FFB5FCA512077EAEEDFF80020F13F8023F7F91B6FCDAFE031380DAF00013C002C0EB
3FE04A14F091C7121F17F8A2EE0FFCA317FEA917FCA3EE1FF8A217F06EEB3FE06E137F02
F0EBFFC09026FDFC07138001F8B5EAFE00023F5BD9F00F13F0D9E00190C7FC2F3A7EB935
>I<903801FFC0010F13FC017F7F90B6FC48018013802607FE0113C0EA0FFC13F8EA1FF0
003F6D1380A24848EB7F00151C92C7FC12FFA9127F7FA2123F6DEB03E0121F6C6CEB07C0
7F6C6CEB0F8000019038E03F006CEBFFFE6D5B010F13F00101138023257DA42A>I<EE7F
80ED7FFFA5150381AEEB03FF011F13F1017F13FD48B7FC48EBC07F3907FE000F48487F48
4813015B123FA2485AA312FFA9127FA36C7EA2121F6D5B000F140FD807FE4913C06C6C6C
B512FE6CEBFFFD6C6C13F9011F13C1903803FE012F3A7DB935>I<49B47E011F13F0017F
13FC90B57E0003903881FF803907FE007F4848EB3FC04848EB1FE05B003FEC0FF0A2485A
16F8150712FF90B6FCA401E0C8FCA4127FA27F123F16F86C7E6C6C13016DEB03F06C6CEB
07E00001EBE01F6C90B51280013F1400010F13FC010013C025257DA42C>I<163FD907FE
EBFF8090267FFFE113C048B512FB489138FFDFE02607FC03131F380FF000001F159F4848
90387FCFC0EEC780007FEDE000A7003F5DA26C6C495A000F92C7FC3907FC03FE90B55A48
5C6D13E0261E07FEC8FC90CAFCA2123FA213C06CB512F8EDFF8016E06C81826C816C8100
0F815A273FC0000F13804848130148C8127FA56C6CECFF006C6C495AD81FF0EB07FCD80F
FEEB3FF86CB65A000115C06C6C91C7FC010713F02B377DA530>103
D<13FFB5FCA512077EAEED7FC0913803FFF84A7F021F7F91383F03FFDA7801138014F04A
6C13C05C5CA391C7FCB3A2B5D8FC3F13FFA5303A7DB935>I<13F0EA03FC487E487EA248
1380A46C1300A26C5A6C5AEA00F090C7FCA813FF127FA512077EB3A7B512F8A5153B7DBA
1B>I<13FFB5FCA512077EAE92383FFFE0A592380FF0004B5A4B5A4BC7FC15FEEC03FC4A
5A4A5AEC1FC0143F4A7E4A7E81A281ECCFFEEC87FF1407496C7F6E7F6E7FA26F7E6F7E6F
7EA26F7EB539F83FFFF8A52D3A7EB932>107 D<13FFB5FCA512077EB3B3AAB512FCA516
3A7DB91B>I<01FED97FE0EB0FFC00FF902601FFFC90383FFF8002076D90B57E021FD9FF
0380DA3F03903987E07FF0DA78009039CF001FF800074914DE6C6C48D97FFC6D7E4A5C4A
5CA391C75BB3A2B5D8FC1FB50083B512F0A54C257DA451>I<01FEEB7FC000FF903803FF
F84A7F021F7F91383F03FFDA78011380000713F06C6C486C13C05C5CA391C7FCB3A2B5D8
FC3F13FFA530257DA435>I<903801FFC0010F13F8017F13FF90B67E0003018013E03A07
FE003FF0D80FF8EB0FF8001F81491307003F81491303007F81A300FF1680A9007F1600A3
6C6C495AA2001F5D6D130F6C6C495A6C6C495A6C6C6CB45A6C90B55A6C6C91C7FC011F13
FC010113C029257DA430>I<01FFEBFF80B5000F13F8023F7F91B6FCDAFE071380DAF001
13C000079039C0007FE06C4914F091C7123F17F8161F17FCA2160F17FEA917FC161FA217
F8163F17F06EEB7FE06E13FFDAF00113C0DAFC07138091B5EAFE00023F5B020F13F00201
90C7FC91C9FCABB512FCA52F357EA435>I<9038FE07F000FFEB1FFC4A7E4A7E02F81380
02E113C0EA07FF6C13C1A202801380A2ED7F00151C91C8FCB3B512FEA522257EA427>
114 D<90383FF0383903FFFEF84813FF121F383FC00FEB0003007E1301140012FEA27E6D
130013F8EBFFE06C13FC14FF6C14C06C14E06C14F0000314F8C614FC131F9038007FFE14
070078130112F814007EA26C14FC6C1301018013F89038F00FF090B512E000FD14C000F0
140038E01FF81F257DA426>I<131FA55BA45BA25BA25A5A5A001FEBFFE0B6FCA4000390
C7FCB115F8A86CEB01F014816CEBC3E090387FFFC06D13806D1300EB03FC1D357EB425>
I<01FFEC3FC0B5EB3FFFA5000714016C80B3A25DA25D6C5C4B13E06CD9C03E13FF90387F
FFFC6D5B6D13E00103130030257DA435>I<B539F003FFF8A5000390C7EA3E006E137E6C
157C6E13FC6C5DECE001017F5CA2ECF003013F5CECF807011F5CECFC0F010F5C151FD907
FE90C7FCA26E5A6D133E15FE6D5BA26D5BA36E5AA26E5AA26E5AA26E5A2D257EA432>I<
B500F1B538807FFFA50007903B000FF80007E06C6E6C14C0180F6C0180168082DAC00F14
1F6C6F14004B5CD97FE0153E17806E48147E013F90393E7FC07C037E14FC90271FF87C3F
5B17E0DAFCFC13E1010F9039F81FF1F014FD9139FFF00FF36DEDFBE017FF6D496C5BA24B
7E6D5EA26D496C90C7FCA36EC75AA2023E147C40257EA445>I<B539F003FFF8A5000390
C7EA3E006E137E6C157C6E13FC6C5DECE001017F5CA2ECF003013F5CECF807011F5CECFC
0F010F5C151FD907FE90C7FCA26E5A6D133E15FE6D5BA26D5BA36E5AA26E5AA26E5AA26E
5AA2141F92C8FC5C003F133E387F807E38FFC07C14FC5CEAF80138FC07F0387E1FE0387F
FFC06C90C9FC6C5AEA07F02D357EA432>121 D<003FB612C0A4D9F0031380D9C0071300
49485AEB001F007E5C4A5A147F007C495A5D495B5B495B000091C7FC495A131F5C90393F
F807C0137FEBFFF014E04813C048140F48138014004848EB1F80121F49133F4848137F39
7FF003FFB7FCA422257DA42A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmbx12 20.74 18
/Fd 18 117 df<BDFC1CFCF4FFC01DF81DFF1EC01EF88AC7003F91C96C14FF090315C0E1
007F800A0F14F80A03800A00800B3F7F7780778077800B018077808C8A787F787FA27880
8D8A8D8A8D8A8DA28D8AA28DA28BA28DA42280A38BA322C0B22280A367A32200A4699CB5
FCA269A3545CA2696669666966695491C7FC6668545B9BB55A65535C535C535C0B3F5C9A
B6C8FC5214FC0A0F5C0A3F5C0903B612C0097F5DBF48C9FC1EF81EE01E800BFCCAFC1DE0
52CBFC99CCFC82767AF594>68 D<B800C051B8128071637163A37163A27163C7003F57C8
FC71F33FBFA203EF6DF37F3FA303E76E1AFEA203E36EF101FCA203E16EF103F8A203E06E
F107F0A3706DF10FE0A2706DF11FC0A2706DF13F80A2706DF17F00A3706E18FEA2706E4D
5AA2706E4D5AA3706E4D5AA2716D4D5AA2716D4D5AA2716D4D5AA3716D4DC7FCA2716E16
FEA2716E4B5AA2716E4B5AA3716E4B5AA2726D4B5AA2726D4B5AA3726D4B5AA2726D4BC8
FCA2726E14FEA2726E495AA3726E495AA2726E495AA2736D495AA2736D495AA3736D495A
A2736D49C9FCA273EC80FEA2F481FC7314C1A273ECE3F8A273ECF7F0A274EBFFE0A3745C
A2745CA27491CAFCA2745BA3745BA2902603FFFE705BB800F897BA1280745BA2755AA375
5A755AA97679F5B8>77 D<BC7E1BFF1CF01CFF1DC01DF81DFE777EC7003F91C8000715E0
E0003F80090714FC090180756C7F7680768076807680A276808B888BA37680A38CAA9DC8
FCA3525CA267A2525C676467525C525C5291C9FC99B512FC515C090F5C097F14C0080FB6
CAFC94B912FC1DE09ACBFC1CF81CFE767E94C8003F80080714F0080180746C13FE757F09
0F808A7580878A75808A87A28A888AA78BA78BA779147E22FFA288A28B765E22FE768076
16037914FCBA00C06E1607766E14F8769139FF801FF00B3F9138E07FE07791B512C00B07
16800B011600E3003F5CD1000714F8E4000F13E088787AF590>82
D<92381FFFF80207B612C0023F15FC49B8FC010717C04917F0013F9026F0007F13FCD97F
FCC7000F7F02FF02037F90B56C01008048717F6F6E7F86486E6E7F727FA28684866C5C84
6C5C876D90C8FC6D5AEB0FF8EB01C090CAFCA7057FB6FC043FB7FC0307B8FC157F0207B9
FC021F158391B6EAC0030103ECFC00010F14C04991C7FC017F13FC90B512F04814C0485C
4891C8FC485B485BA2485B5C5AA25CB5FCA460A36C6D5D60A26C6D5D6E037E806C4D806C
01FF020315FC6C6E4948ECFFFC6C02E090261FF07F14FE6C913AFC01FFC03F6C6C90B648
7E6D4C7E010F03FC7F010103F01301D9003F0280D9003F13FC020001F8CBFC57507ACE5E
>97 D<903801FFFCB6FCA8C67E131F7FB3ADF07FFC050FB512E0057F14FC4CB77E040716
E0041F16F893277FFE003F7FDCFFF0010713FF92B500800101804CC86C7F4C6F7F04F06F
7F4C6F7F4C6F7F4C6F7F93C9804B821D807414C0A21DE0871DF0A31DF8A2871DFCA51DFE
AD1DFCA51DF863A21DF0A21DE098B5FC1DC0A2501480A26F4C140064704B5B705D705F70
4B5BDBF7F8037F5BDBE3FE92B55ADBC1FF020391C7FC038001C0010F5BDC7FFC90B512F8
DB001FB712E04A6D16804A01034BC8FC4A010015F84A021F148090C9000101F0C9FC5F79
7AF76C>I<93381FFFE00307B67E033F15F092B712FE0207707E021F834A8391B526F800
0F13F84902C013034991C7487F010F01FC8249495C495B49494A7F5D90B5FC485C4891C8
FCA248715B5C48715BA248496F5B725B9538007FC048060EC7FC96C8FCA2485BA5B5FCAD
7EA380A27EA36C7FA27E6EEF1F806CF13FC0A26C6EEE7F80816C19FF6C6E17006F4B5A6D
6D15036D6D4B5A6D6D4B5A6D6D151F6D02C0EC7FF06D02F849485A01009126FF801F1380
6E91B6C7FC021F5E020716F8020116E0DA003F1580030702FCC8FCDB003F13804A507ACE
56>I<97380FFFE00607B6FCA8F00003190086B3ADEE1FFF0303B512F0033F14FE92B712
C0020716E0021F16F84A9039FE007FFE91B500E0EB07FF490280010190B5FC010749C87E
4949814901F0150F494981498390B548815D48844891CAFCA2485BA25A5C5AA25AA25C5A
A5B5FCAD7EA57E80A27EA37E807EA26C6D5E7E6F5D6C606D6D5D6D6D5D6D6D5D6D6D4B80
6D6D4AB612FC6D01FF0207EDFFFE6D02C0EB1FFC6D6C9039F801FFF8021F90B612E06E5E
020116006E6C14F8030F14E09226007FFCC749C7FC5F797AF76C>I<93387FFF80030FB5
12FC037FECFF804AB712E0020716F8021F82027FD9F80713FF91B5D8C00080010391C700
3F7F4901FC020F7F4901F06E7F49496E7F49707F49496E7F90B55A737E4891C9FC487213
80485B1BC048841BE0485BA27313F05AA25C5AA21BF885A2B5FCA291BAFCA51BF002F8CC
FCA67EA3807EA47E806CF103F0F207F86C7F1A0F6C6E17F06C191F6F17E06C6E163F6DF0
7FC06D7F6D6D923801FF806D01FE4B13006D6D6CEC0FFE6D02E0EC3FFC6D02F8ECFFF86D
6C9026FFC00F5B6E91B612C0020F5F02034CC7FC020016F8031F15E0030392C8FCDB000F
13E04D507BCE58>I<EF3FFE040FB512C0047F14F00303B67E030F15FE033F8192B5D8E0
1F13804AEC003F020701FC4913C04A4915E04A01E090B5FC4A5B4D14F04A138091B51200
A2495BA2496F14E0A24B6E13C05B72138095380FFE00725A95C8FCB3B912C0A8D8000749
CAFCB3B3B3A7007FB712FCA844797AF83B>I<903801FFFCB6FCA8C67E131F7FB3AD9538
07FFC0067F13FC0503B67E050F15E0053F15F84D81932701FFE00F7F932703FE00037FDC
07F86D80DC0FE07F4C48824C5A047EC86C7F5E4C8315FDDBFFF0815E885EA25EA293C9FC
A45DB3B3A7B8D8E003B81280A8617879F76C>104 D<EB01FCEB07FF011F13C0497F497F
90B57EA24880A24880A76C5CA26C5CA26D5B6D5B6D5B010790C8FCEB01FC90CAFCB29038
01FFFC007FB5FCA8C67E131F7FB3B3B3A5B81280A8297979F835>I<903801FFFCB6FCA8
C67E131F7FB3B3B3B3B3ABB812C0A82A7879F735>108 D<902601FFF8913807FFC0B603
7F13FC0503B67E050F15E0053F15F84D81932701FFE00F7F932703FE00037FDC07F86D80
C66CDA0FE07F011F4A48826D4A5A047EC86C7F5E4C8315F9DBFBF0815E03FF845EA25EA2
93C9FCA45DB3B3A7B8D8E003B81280A8614E79CD6C>110 D<93381FFFE00303B6FC031F
15E092B712FC020316FF020F17C0023FD9FC0014F091B500C0010F13FC4991C700037F49
01FC02007F010F496F13C049496F7F49496F7F4B8149496F7F90B5C96C7F4886A2484970
7F481B80A248497014C0A2481BE0A348497113F0A3481BF8A5B51AFCAE6C1BF8A46C1BF0
6E94B5FCA36C1BE0A26C6D4C14C0A26C1B806E5E6C1B006C6E4B5BA26C6E4B5B6D6D4B5B
6D6D4B5B6D6D4B5B6D6D92B55A6D01FF02035C6D02C0010F91C7FC010002FC90B512FC6E
90B75A021F17E00207178002014CC8FCDA003F15F0030392C9FCDB001F13E056507BCE61
>I<902601FFFCEC7FFEB60207B512F0053F14FE4CB77E040716E0041F16F84C16FE9327
FFFE007F7F03FD01E0010F80C66C90B50080010314E0011F4AC8806D02F86F7F4C6F7F4C
814C6F7F4C8393C96C14805D7414C0A27414E0A27414F0A21DF8A287A21DFCA387A21DFE
AD1DFCA263A31DF8A298B5FC1DF0A21DE0621DC0621D80626F1900505B704B5B82704B5B
704B5B7092B55A04FE02035C704A91C7FC4B01C0011F5B93267FFC01B512F870B712E004
0F5E04034BC8FC040015F8051F1480050101F0C9FC94CCFCB3A6B812E0A85F6F7ACD6C>
I<902601FFF8EB0FF8B691387FFF804CB512E04C14F8040F804C8093393FF07FFF05C0B5
12804CC6FCC66CDAFE0114C0011FEBF9FC6D4A4814E0EDFBF0A2EDFFE016C0A27114C016
80711480A293C76C1300725AF00FF84BEC01C095C8FCA55DB3B3A4B812F8A8434E7ACD4F
>114 D<912601FFFCEB0780023F9039FFC00FC049B6EAF83F010FEDFEFF013F92B5FC90
397FFE00072601FFE01300480180141F4848C87E4848818348488183485A187F127FA218
3F12FF7FA27F7F6DEE1F806E92C7FC14E014FC6CEBFFE0EDFF8016FC6CEDFFC017F86C16
FE6C707E6C17E0846C17FCC6836D826D1780010F17C01303010017E0021F16F01403DA00
1F15F8ED007F040314FCEE007F170F7113FE007E1601B482187FA26D163FA2181F7FA219
FC7FA27F6D17F8183F6D17F06D167F6D17E06EEDFFC06E5C02F00207138002FC021F1300
913AFFC001FFFE01E790B612F801C15ED9807F15C026FE001F92C7FC48010714F80078D9
007F90C8FC3F507ACE4C>I<15FFA75CA55CA45CA25CA25CA25CA25C91B5FCA25B5B5B13
1F5B90B9FC120FBAFCA6D8000791C9FCB3B3A3F01FE0AE19C06D163F8219806D167F826D
EEFF0070485A6EEBF0036E9038FC07FC6E90B55A6E5D6E5D02015D6E6C91C7FC030F13FC
030013E03B6E7CEC4B>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black 110 323 a Fd(Referen)-5
b(tial)68 b(Dep)5 b(endencies)67 b(of)d(the)h(Mondial)1439
485 y(Database)-184 777 y
 tx@Dict begin tx@NodeDict begin {12.19997 82.40004 96.73193 48.36597
-35.10004 } false /N@Organization 16 {InitRnode } NewNode end end
 -184 777 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 82.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(Organization)-152 901
y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aOrganizationname
16 {InitRnode } NewNode end end
 -152 901 a 83 w Fb(name)521 901 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bOrganizationname
16 {InitRnode } NewNode end end
 521 901 a -152 1001
a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aOrganizationabbreviation 16 {InitRnode } NewNode end end
 -152 1001 a Fa(\003)18 b Fb(abbreviation)521 1001 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bOrganizationabbreviation
16 {InitRnode } NewNode end end

521 1001 a 521 1001 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aOrganizationabbreviation
known { /N@aOrganizationabbreviation load GetCenter } { 0 0 } ifelse
end } PutCoor PutBegin  end
 521 1001 a 521 1001 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 521 1001
a 521 1001 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xOrganizationabbreviation
16 {InitRnode } NewNode end end
 521 1001 a 521 1001 a
 tx@Dict begin PutEnd  end
 521 1001 a 521 1001
a
 tx@Dict begin PutEnd  end
 521 1001 a 521 1001 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aOrganizationabbreviation /N@xOrganizationabbreviation InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 521 1001 a -152 1101 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aOrganizationcity
16 {InitRnode } NewNode end end
 -152 1101
a 83 w Fb(cit)n(y)521 1101 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bOrganizationcity 16 {InitRnode } NewNode end end
 521 1101 a Fa(\003)586 1101
y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bOrganizationcity
known { /N@bOrganizationcity load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 586 1101 a 586 1101 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 586 1101 a 586 1101 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yOrganizationcity
16 {InitRnode } NewNode end end
 586 1101
a 586 1101 a
 tx@Dict begin PutEnd  end
 586 1101 a 586 1101 a
 tx@Dict begin PutEnd  end
 586 1101 a 586 1101
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bOrganizationcity /N@yOrganizationcity InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 586 1101 a -152 1200 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aOrganizationcountry
16 {InitRnode } NewNode end end
 -152 1200 a 83 w Fb(coun)n(try)521
1200 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bOrganizationcountry 16 {InitRnode } NewNode end end
 521 1200 a Fa(\003)586 1200 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bOrganizationcountry
known { /N@bOrganizationcountry load GetCenter } { 0 0 } ifelse end
} PutCoor PutBegin  end
 586 1200 a 586 1200
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 586 1200 a 586 1200 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yOrganizationcountry
16 {InitRnode } NewNode end end
 586 1200 a 586 1200 a
 tx@Dict begin PutEnd  end
 586 1200
a 586 1200 a
 tx@Dict begin PutEnd  end
 586 1200 a 586 1200 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bOrganizationcountry /N@yOrganizationcountry InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 586 1200 a -152 1300
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aOrganizationprovince
16 {InitRnode } NewNode end end
 -152 1300 a 83 w Fb(pro)n(vince)521 1300 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bOrganizationprovince 16 {InitRnode } NewNode end end
 521 1300
a Fa(\003)586 1300 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bOrganizationprovince
known { /N@bOrganizationprovince load GetCenter } { 0 0 } ifelse end
} PutCoor PutBegin  end
 586 1300 a 586 1300 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 586 1300 a
586 1300 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yOrganizationprovince
16 {InitRnode } NewNode end end
 586 1300 a 586 1300 a
 tx@Dict begin PutEnd  end
 586 1300 a 586 1300
a
 tx@Dict begin PutEnd  end
 586 1300 a 586 1300 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bOrganizationprovince /N@yOrganizationprovince InitNC {
NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 586 1300 a -152 1400 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aOrganizationestablished
16 {InitRnode } NewNode end end
 -152 1400
a 83 w Fb(established)521 1400 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bOrganizationestablished
16 {InitRnode } NewNode end end
 521 1400 a -184 1662
a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@Membership 16 {InitRnode } NewNode end end
 -184 1662 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
83 w Fc(is)p 2 1662 29 4 v 33 w(mem)m(b)s(er)-152 1787
y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aMembershiporganization 16 {InitRnode } NewNode end end
 -152 1787 a Fa(\001)g Fb(organization)521 1787 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bMembershiporganization
16 {InitRnode } NewNode end end
 521
1787 a 521 1787 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aMembershiporganization
known { /N@aMembershiporganization load GetCenter } { 0 0 } ifelse
end } PutCoor PutBegin  end
 521 1787 a 521 1787 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 521 1787 a 521
1787 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xMembershiporganization
16 {InitRnode } NewNode end end
 521 1787 a 521 1787 a
 tx@Dict begin PutEnd  end
 521 1787 a 521 1787 a
 tx@Dict begin PutEnd  end
 521
1787 a 521 1787 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aMembershiporganization /N@xMembershiporganization InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 521 1787 a -152 1886 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aMembershipcountry 16 {InitRnode } NewNode end end
 -152 1886 a
Fa(\001)g Fb(coun)n(try)521 1886 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bMembershipcountry
16 {InitRnode } NewNode end end
 521 1886 a 521 1886
a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aMembershipcountry
known { /N@aMembershipcountry load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 521 1886 a 521 1886 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 521 1886 a 521 1886 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xMembershipcountry
16 {InitRnode } NewNode end end
 521 1886
a 521 1886 a
 tx@Dict begin PutEnd  end
 521 1886 a 521 1886 a
 tx@Dict begin PutEnd  end
 521 1886 a 521 1886
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aMembershipcountry /N@xMembershipcountry InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 521 1886 a -152 1986 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aMembershiptype
16 {InitRnode } NewNode end end
 -152 1986 a 83 w Fb(t)n(yp)r(e)521
1986 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bMembershiptype
16 {InitRnode } NewNode end end
 521 1986 a -184 2248 a
 tx@Dict begin tx@NodeDict begin {12.19997 82.40004 96.73193 48.36597
-35.10004 } false /N@Country 16 {InitRnode } NewNode end end
 -184 2248 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 82.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(Coun)m(try)-152 2373
y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aCountryname
16 {InitRnode } NewNode end end
 -152 2373 a 83 w Fb(name)521 2373 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bCountryname
16 {InitRnode } NewNode end end
 521 2373 a -152
2472 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aCountrycode 16 {InitRnode } NewNode end end
 -152 2472 a Fa(\003)g Fb(co)r(de)521 2472 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bCountrycode 16 {InitRnode } NewNode end end
 521
2472 a Fa(\003)586 2472 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aCountrycode known
{ /N@aCountrycode load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 586 2472 a 586 2472 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 586 2472
a 586 2472 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xCountrycode
16 {InitRnode } NewNode end end
 586 2472 a 586 2472 a
 tx@Dict begin PutEnd  end
 586 2472 a 586 2472
a
 tx@Dict begin PutEnd  end
 586 2472 a 586 2472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aCountrycode /N@xCountrycode InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 586 2472 a 586 2472 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bCountrycode known
{ /N@bCountrycode load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 586 2472
a 586 2472 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 586 2472 a 586 2472 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yCountrycode
16 {InitRnode } NewNode end end
 586 2472 a 586 2472
a
 tx@Dict begin PutEnd  end
 586 2472 a 586 2472 a
 tx@Dict begin PutEnd  end
 586 2472 a 586 2472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bCountrycode /N@yCountrycode InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 586 2472
a -152 2572 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aCountrycapital
16 {InitRnode } NewNode end end
 -152 2572 a 83 w Fb(capital)521 2572 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bCountrycapital 16 {InitRnode } NewNode end end

521 2572 a Fa(\003)586 2572 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bCountrycapital known
{ /N@bCountrycapital load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 586 2572 a 586 2572 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 586
2572 a 586 2572 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yCountrycapital
16 {InitRnode } NewNode end end
 586 2572 a 586 2572 a
 tx@Dict begin PutEnd  end
 586 2572 a 586
2572 a
 tx@Dict begin PutEnd  end
 586 2572 a 586 2572 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bCountrycapital /N@yCountrycapital InitNC { NCLine  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 586 2572 a -152 2672 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aCountryprovince
16 {InitRnode } NewNode end end
 -152
2672 a 83 w Fb(pro)n(vince)521 2672 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bCountryprovince 16 {InitRnode } NewNode end end
 521 2672 a Fa(\003)586
2672 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bCountryprovince
known { /N@bCountryprovince load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 586 2672 a 586 2672 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 586 2672 a 586 2672 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yCountryprovince
16 {InitRnode } NewNode end end
 586
2672 a 586 2672 a
 tx@Dict begin PutEnd  end
 586 2672 a 586 2672 a
 tx@Dict begin PutEnd  end
 586 2672 a 586
2672 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bCountryprovince /N@yCountryprovince InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 586 2672 a -152 2771 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aCountryarea
16 {InitRnode } NewNode end end
 -152 2771 a 83 w Fb(area)521
2771 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bCountryarea
16 {InitRnode } NewNode end end
 521 2771 a -152 2871 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aCountrypopulation
16 {InitRnode } NewNode end end
 -152 2871 a 83 w Fb(p)r(opulation)521
2871 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bCountrypopulation
16 {InitRnode } NewNode end end
 521 2871 a -184 3133 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@borders 16 {InitRnode } NewNode end end
 -184 3133 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(b)s(orders)-152 3258
y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aborderscountry1 16 {InitRnode } NewNode end end
 -152 3258 a Fa(\001)g Fb(coun)n(try1)521 3258 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bborderscountry1
16 {InitRnode } NewNode end end
 521
3258 a 521 3258 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aborderscountry1
known { /N@aborderscountry1 load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 521 3258 a 521 3258 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 521 3258 a 521
3258 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xborderscountry1
16 {InitRnode } NewNode end end
 521 3258 a 521 3258 a
 tx@Dict begin PutEnd  end
 521 3258 a 521 3258 a
 tx@Dict begin PutEnd  end
 521
3258 a 521 3258 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aborderscountry1 /N@xborderscountry1 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 521 3258 a -152 3357 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aborderscountry2 16 {InitRnode } NewNode end end
 -152 3357 a
Fa(\001)g Fb(coun)n(try2)521 3357 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bborderscountry2
16 {InitRnode } NewNode end end
 521 3357 a 521 3357
a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aborderscountry2
known { /N@aborderscountry2 load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 521 3357 a 521 3357 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 521 3357 a 521 3357 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xborderscountry2
16 {InitRnode } NewNode end end
 521 3357
a 521 3357 a
 tx@Dict begin PutEnd  end
 521 3357 a 521 3357 a
 tx@Dict begin PutEnd  end
 521 3357 a 521 3357
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aborderscountry2 /N@xborderscountry2 InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 521 3357 a -152 3457 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aborderslength
16 {InitRnode } NewNode end end
 -152 3457 a 83 w Fb(length)521
3457 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bborderslength
16 {InitRnode } NewNode end end
 521 3457 a 955 777 a
 tx@Dict begin tx@NodeDict begin {12.19997 82.40004 96.73193 48.36597
-35.10004 } false /N@located 16 {InitRnode } NewNode end end
 955 777 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 82.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(lo)s(cated)987 901 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@alocatedcity 16 {InitRnode } NewNode end end

987 901 a Fa(\001)g Fb(cit)n(y)1660 901 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@blocatedcity
16 {InitRnode } NewNode end end
 1660 901 a
1660 901 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@alocatedcity known
{ /N@alocatedcity load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1660 901 a 1660 901 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 901 a 1660 901
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xlocatedcity
16 {InitRnode } NewNode end end
 1660 901 a 1660 901 a
 tx@Dict begin PutEnd  end
 1660 901 a 1660 901 a
 tx@Dict begin PutEnd  end
 1660 901
a 1660 901 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@alocatedcity /N@xlocatedcity InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1660 901 a 987 1001 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@alocatedcountry 16 {InitRnode } NewNode end end
 987 1001 a Fa(\001)g
Fb(coun)n(try)1660 1001 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@blocatedcountry
16 {InitRnode } NewNode end end
 1660 1001 a 1660 1001 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@alocatedcountry known
{ /N@alocatedcountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 1660
1001 a 1660 1001 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 1001 a 1660 1001 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xlocatedcountry
16 {InitRnode } NewNode end end
 1660 1001
a 1660 1001 a
 tx@Dict begin PutEnd  end
 1660 1001 a 1660 1001 a
 tx@Dict begin PutEnd  end
 1660 1001 a 1660
1001 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@alocatedcountry /N@xlocatedcountry InitNC { NCLine  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1660 1001 a 987 1101 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@alocatedprovince 16 {InitRnode } NewNode end end
 987 1101 a Fa(\001)g Fb(pro)n(vince)1660
1101 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@blocatedprovince
16 {InitRnode } NewNode end end
 1660 1101 a 1660 1101 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@alocatedprovince
known { /N@alocatedprovince load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 1660 1101 a 1660 1101
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 1101 a 1660 1101 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xlocatedprovince
16 {InitRnode } NewNode end end
 1660 1101 a 1660 1101 a
 tx@Dict begin PutEnd  end
 1660
1101 a 1660 1101 a
 tx@Dict begin PutEnd  end
 1660 1101 a 1660 1101 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@alocatedprovince /N@xlocatedprovince InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1660 1101
a 987 1200 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@alocatedriver
16 {InitRnode } NewNode end end
 987 1200 a 83 w Fb(riv)n(er)1660 1200 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@blocatedriver 16 {InitRnode } NewNode end end

1660 1200 a Fa(\003)1725 1200 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@blocatedriver known
{ /N@blocatedriver load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1725 1200 a 1725 1200
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1725 1200 a 1725 1200 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ylocatedriver
16 {InitRnode } NewNode end end
 1725 1200 a 1725 1200 a
 tx@Dict begin PutEnd  end
 1725
1200 a 1725 1200 a
 tx@Dict begin PutEnd  end
 1725 1200 a 1725 1200 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@blocatedriver /N@ylocatedriver InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1725 1200
a 987 1300 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@alocatedlake
16 {InitRnode } NewNode end end
 987 1300 a 83 w Fb(lak)n(e)1660 1300 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@blocatedlake 16 {InitRnode } NewNode end end
 1660
1300 a Fa(\003)1725 1300 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@blocatedlake known
{ /N@blocatedlake load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1725 1300 a 1725 1300 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1725
1300 a 1725 1300 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ylocatedlake
16 {InitRnode } NewNode end end
 1725 1300 a 1725 1300 a
 tx@Dict begin PutEnd  end
 1725 1300
a 1725 1300 a
 tx@Dict begin PutEnd  end
 1725 1300 a 1725 1300 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@blocatedlake /N@ylocatedlake InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1725 1300 a 987
1400 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@alocatedsea
16 {InitRnode } NewNode end end
 987 1400 a 83 w Fb(sea)1660 1400 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@blocatedsea 16 {InitRnode } NewNode end end
 1660 1400 a
Fa(\003)1725 1400 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@blocatedsea known
{ /N@blocatedsea load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1725 1400 a 1725 1400 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1725 1400
a 1725 1400 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ylocatedsea
16 {InitRnode } NewNode end end
 1725 1400 a 1725 1400 a
 tx@Dict begin PutEnd  end
 1725 1400 a 1725
1400 a
 tx@Dict begin PutEnd  end
 1725 1400 a 1725 1400 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@blocatedsea /N@ylocatedsea InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1725 1400 a 955 1662 a
 tx@Dict begin tx@NodeDict begin {12.19997 82.40004 96.73193 48.36597
-35.10004 } false /N@City 16 {InitRnode } NewNode end end

955 1662 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 82.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
83 w Fc(Cit)m(y)987 1787 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aCityname 16 {InitRnode } NewNode end end
 987 1787 a Fa(\003)g Fb(name)1660
1787 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bCityname
16 {InitRnode } NewNode end end
 1660 1787 a 1660 1787 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aCityname known {
/N@aCityname load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1660 1787 a 1660 1787
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 1787 a 1660 1787 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xCityname
16 {InitRnode } NewNode end end
 1660 1787 a 1660 1787 a
 tx@Dict begin PutEnd  end
 1660
1787 a 1660 1787 a
 tx@Dict begin PutEnd  end
 1660 1787 a 1660 1787 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aCityname /N@xCityname InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1660 1787
a 987 1886 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aCitycountry 16 {InitRnode } NewNode end end
 987 1886 a Fa(\003)g Fb(coun)n(try)1660
1886 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bCitycountry 16 {InitRnode } NewNode end end
 1660 1886 a Fa(\003)1725 1886 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aCitycountry known
{ /N@aCitycountry load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1725 1886 a 1725
1886 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1725 1886 a 1725 1886 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xCitycountry
16 {InitRnode } NewNode end end
 1725 1886 a 1725 1886
a
 tx@Dict begin PutEnd  end
 1725 1886 a 1725 1886 a
 tx@Dict begin PutEnd  end
 1725 1886 a 1725 1886 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aCitycountry /N@xCitycountry InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1725
1886 a 1725 1886 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bCitycountry known
{ /N@bCitycountry load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1725 1886 a 1725 1886 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1725 1886
a 1725 1886 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yCitycountry
16 {InitRnode } NewNode end end
 1725 1886 a 1725 1886 a
 tx@Dict begin PutEnd  end
 1725 1886 a 1725
1886 a
 tx@Dict begin PutEnd  end
 1725 1886 a 1725 1886 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bCitycountry /N@yCitycountry InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1725 1886 a 987 1986 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aCityprovince 16 {InitRnode } NewNode end end

987 1986 a Fa(\003)g Fb(pro)n(vince)1660 1986 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bCityprovince 16 {InitRnode } NewNode end end
 1660
1986 a Fa(\003)1725 1986 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aCityprovince known
{ /N@aCityprovince load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1725 1986 a 1725 1986 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1725
1986 a 1725 1986 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xCityprovince
16 {InitRnode } NewNode end end
 1725 1986 a 1725 1986 a
 tx@Dict begin PutEnd  end
 1725 1986
a 1725 1986 a
 tx@Dict begin PutEnd  end
 1725 1986 a 1725 1986 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aCityprovince /N@xCityprovince InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1725 1986 a 1725
1986 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bCityprovince known
{ /N@bCityprovince load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1725 1986 a 1725 1986 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1725 1986 a 1725 1986
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yCityprovince
16 {InitRnode } NewNode end end
 1725 1986 a 1725 1986 a
 tx@Dict begin PutEnd  end
 1725 1986 a 1725 1986 a
 tx@Dict begin PutEnd  end
 1725
1986 a 1725 1986 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bCityprovince /N@yCityprovince InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1725 1986 a 987 2085 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aCitypopulation
16 {InitRnode } NewNode end end
 987 2085 a
83 w Fb(p)r(opulation)1660 2085 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bCitypopulation
16 {InitRnode } NewNode end end
 1660 2085 a 987 2185
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aCitylongitude
16 {InitRnode } NewNode end end
 987 2185 a 83 w Fb(longitude)1660 2185 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bCitylongitude
16 {InitRnode } NewNode end end
 1660 2185
a 987 2285 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aCitylatitude
16 {InitRnode } NewNode end end
 987 2285 a 83 w Fb(latitude)1660 2285 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bCitylatitude
16 {InitRnode } NewNode end end

1660 2285 a 955 2771 a
 tx@Dict begin tx@NodeDict begin {12.19997 82.9001 96.73193 48.36597
-35.35007 } false /N@Province 16 {InitRnode } NewNode end end
 955 2771 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 82.9001
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(Pro)m(vince)987 2896
y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aProvincename
16 {InitRnode } NewNode end end
 987 2896 a 83 w Fb(name)1660 2896 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bProvincename 16 {InitRnode } NewNode end end
 1660 2896 a Fa(\001)1725
2896 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bProvincename known
{ /N@bProvincename load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1725 2896 a 1725 2896 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1725 2896 a 1725 2896
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yProvincename
16 {InitRnode } NewNode end end
 1725 2896 a 1725 2896 a
 tx@Dict begin PutEnd  end
 1725 2896 a 1725 2896 a
 tx@Dict begin PutEnd  end
 1725
2896 a 1725 2896 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bProvincename /N@yProvincename InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1725 2896 a 987 2995 a
 tx@Dict begin tx@NodeDict begin {8.391 0.0 7.7778 3.8889 4.1955 }
false /N@aProvincecountry 16 {InitRnode } NewNode end end
 987 2995 a
-25 x Fa(\001)1070 2995 y Fb(coun)n(try)1660 2995 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bProvincecountry 16 {InitRnode } NewNode end end
 1660
2995 a Fa(\001)1725 2995 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aProvincecountry
known { /N@aProvincecountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 1725 2995 a 1725 2995 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1725
2995 a 1725 2995 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xProvincecountry
16 {InitRnode } NewNode end end
 1725 2995 a 1725 2995 a
 tx@Dict begin PutEnd  end
 1725 2995
a 1725 2995 a
 tx@Dict begin PutEnd  end
 1725 2995 a 1725 2995 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aProvincecountry /N@xProvincecountry InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1725 2995 a 1725
2995 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bProvincecountry
known { /N@bProvincecountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 1725 2995 a 1725 2995 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 1725 2995 a 1725 2995
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yProvincecountry
16 {InitRnode } NewNode end end
 1725 2995 a 1725 2995 a
 tx@Dict begin PutEnd  end
 1725 2995 a 1725 2995 a
 tx@Dict begin PutEnd  end
 1725
2995 a 1725 2995 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bProvincecountry /N@yProvincecountry InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1725 2995 a 987 3016 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aProvincecountry2 16 {InitRnode } NewNode end end
 987 3016 a
Fa(\001)1660 3016 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bProvincecountry2
16 {InitRnode } NewNode end end
 1660 3016 a 1660 3016 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aProvincecountry2
known { /N@aProvincecountry2 load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 1660 3016
a 1660 3016 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 3016 a 1660 3016 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xProvincecountry2
16 {InitRnode } NewNode end end
 1660 3016 a 1660
3016 a
 tx@Dict begin PutEnd  end
 1660 3016 a 1660 3016 a
 tx@Dict begin PutEnd  end
 1660 3016 a 1660 3016
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aProvincecountry2 /N@xProvincecountry2 InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1660 3016 a 987 3099 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aProvincearea
16 {InitRnode } NewNode end end
 987 3099 a 83 w Fb(area)1660
3099 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bProvincearea
16 {InitRnode } NewNode end end
 1660 3099 a 987 3199 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aProvincepopulation
16 {InitRnode } NewNode end end
 987 3199 a 83 w Fb(p)r(opulation)1660
3199 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bProvincepopulation
16 {InitRnode } NewNode end end
 1660 3199 a 987 3298 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aProvincecapital 16 {InitRnode } NewNode end end
 987 3298 a Fa(\001)g Fb(capital)1660
3298 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bProvincecapital
16 {InitRnode } NewNode end end
 1660 3298 a 1660 3298 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aProvincecapital
known { /N@aProvincecapital load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 1660 3298 a 1660 3298
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 3298 a 1660 3298 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xProvincecapital
16 {InitRnode } NewNode end end
 1660 3298 a 1660 3298 a
 tx@Dict begin PutEnd  end
 1660
3298 a 1660 3298 a
 tx@Dict begin PutEnd  end
 1660 3298 a 1660 3298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aProvincecapital /N@xProvincecapital InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1660 3298
a 987 3398 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aProvincecapprov 16 {InitRnode } NewNode end end
 987 3398 a Fa(\001)g Fb(cappro)n(v)1660
3398 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bProvincecapprov
16 {InitRnode } NewNode end end
 1660 3398 a 1660 3398 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aProvincecapprov
known { /N@aProvincecapprov load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 1660 3398 a 1660 3398
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 3398 a 1660 3398 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xProvincecapprov
16 {InitRnode } NewNode end end
 1660 3398 a 1660 3398 a
 tx@Dict begin PutEnd  end
 1660
3398 a 1660 3398 a
 tx@Dict begin PutEnd  end
 1660 3398 a 1660 3398 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aProvincecapprov /N@xProvincecapprov InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1660 3398
a -184 3819 a
 tx@Dict begin tx@NodeDict begin {12.19997 82.40004 96.73193 48.36597
-35.10004 } false /N@Economy 16 {InitRnode } NewNode end end
 -184 3819 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 82.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 83 w Fc(Econom)m(y)-152 3943 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aEconomycountry 16 {InitRnode } NewNode end end
 -152 3943
a Fa(\001)g Fb(coun)n(try)521 3943 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEconomycountry
16 {InitRnode } NewNode end end
 521 3943 a 521 3943
a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aEconomycountry known
{ /N@aEconomycountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 521 3943 a 521 3943 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 521 3943 a 521 3943 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xEconomycountry
16 {InitRnode } NewNode end end
 521 3943
a 521 3943 a
 tx@Dict begin PutEnd  end
 521 3943 a 521 3943 a
 tx@Dict begin PutEnd  end
 521 3943 a 521 3943
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aEconomycountry /N@xEconomycountry InitNC { NCLine  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 521 3943 a -152 4043 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aEconomyGDP
16 {InitRnode } NewNode end end
 -152 4043 a 83 w Fb(GDP)521
4043 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEconomyGDP
16 {InitRnode } NewNode end end
 521 4043 a -152 4143 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aEconomyagriculture
16 {InitRnode } NewNode end end
 -152 4143 a 83 w Fb(agriculture)521
4143 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEconomyagriculture
16 {InitRnode } NewNode end end
 521 4143 a -152 4242 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aEconomyservice
16 {InitRnode } NewNode end end
 -152 4242 a 83 w Fb(service)521
4242 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEconomyservice
16 {InitRnode } NewNode end end
 521 4242 a -152 4342 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aEconomyindustry
16 {InitRnode } NewNode end end
 -152 4342 a 83 w Fb(industry)521
4342 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEconomyindustry
16 {InitRnode } NewNode end end
 521 4342 a -152 4442 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aEconomyinflation
16 {InitRnode } NewNode end end
 -152 4442 a 83 w Fb(in\015ation)521
4442 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEconomyinflation
16 {InitRnode } NewNode end end
 521 4442 a -184 4704 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@Population 16 {InitRnode } NewNode end end
 -184 4704 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(P)m(opulation)-152 4828
y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aPopulationcountry 16 {InitRnode } NewNode end end
 -152 4828 a Fa(\001)g Fb(coun)n(try)521 4828 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bPopulationcountry
16 {InitRnode } NewNode end end
 521
4828 a 521 4828 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aPopulationcountry
known { /N@aPopulationcountry load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 521 4828 a 521 4828 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 521 4828 a 521
4828 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xPopulationcountry
16 {InitRnode } NewNode end end
 521 4828 a 521 4828 a
 tx@Dict begin PutEnd  end
 521 4828 a 521 4828 a
 tx@Dict begin PutEnd  end
 521
4828 a 521 4828 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aPopulationcountry /N@xPopulationcountry InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 521 4828 a -69 4928 a Fb(p)r(opulation)p
328 4928 25 4 v 27 w(gro)n(wth)-69 5028 y(infan)n(t)p
149 5028 V 29 w(mortalit)n(y)-184 5290 y
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@Politics 16 {InitRnode } NewNode end end
 -184 5290 a
32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(P)m(olitics)-152
5415 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aPoliticscountry 16 {InitRnode } NewNode end end
 -152 5415 a Fa(\001)g Fb(coun)n(try)521 5415 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bPoliticscountry
16 {InitRnode } NewNode end end

521 5415 a 521 5415 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aPoliticscountry
known { /N@aPoliticscountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 521 5415 a 521 5415 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 521 5415
a 521 5415 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xPoliticscountry
16 {InitRnode } NewNode end end
 521 5415 a 521 5415 a
 tx@Dict begin PutEnd  end
 521 5415 a 521 5415
a
 tx@Dict begin PutEnd  end
 521 5415 a 521 5415 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aPoliticscountry /N@xPoliticscountry InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 521 5415 a -152 5514 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aPoliticsindependence
16 {InitRnode } NewNode end end
 -152 5514
a 83 w Fb(indep)r(endence)521 5514 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bPoliticsindependence
16 {InitRnode } NewNode end end
 521 5514 a -152
5614 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aPoliticsgovernment
16 {InitRnode } NewNode end end
 -152 5614 a 83 w Fb(go)n(v)n(ernmen)n(t)521 5614
y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bPoliticsgovernment
16 {InitRnode } NewNode end end
 521 5614 a 955 4118 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@Language 16 {InitRnode } NewNode end end
 955 4118 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(Language)987 4242 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aLanguagecountry 16 {InitRnode } NewNode end end

987 4242 a Fa(\001)g Fb(coun)n(try)1660 4242 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bLanguagecountry
16 {InitRnode } NewNode end end
 1660 4242
a 1660 4242 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aLanguagecountry
known { /N@aLanguagecountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 1660 4242 a 1660 4242 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 4242 a 1660
4242 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xLanguagecountry
16 {InitRnode } NewNode end end
 1660 4242 a 1660 4242 a
 tx@Dict begin PutEnd  end
 1660 4242 a 1660 4242
a
 tx@Dict begin PutEnd  end
 1660 4242 a 1660 4242 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aLanguagecountry /N@xLanguagecountry InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1660 4242 a 987 4342 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aLanguagename
16 {InitRnode } NewNode end end
 987
4342 a 83 w Fb(name)1660 4342 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bLanguagename
16 {InitRnode } NewNode end end
 1660 4342 a 987 4442
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aLanguagepercentage
16 {InitRnode } NewNode end end
 987 4442 a 83 w Fb(p)r(ercen)n(tage)1660 4442 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bLanguagepercentage
16 {InitRnode } NewNode end end
 1660
4442 a 955 4704 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@Religion 16 {InitRnode } NewNode end end
 955 4704 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 83 w Fc(Religion)987 4828 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aReligioncountry 16 {InitRnode } NewNode end end
 987 4828 a Fa(\001)g
Fb(coun)n(try)1660 4828 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bReligioncountry
16 {InitRnode } NewNode end end
 1660 4828 a 1660 4828 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aReligioncountry
known { /N@aReligioncountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 1660
4828 a 1660 4828 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 4828 a 1660 4828 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xReligioncountry
16 {InitRnode } NewNode end end
 1660 4828
a 1660 4828 a
 tx@Dict begin PutEnd  end
 1660 4828 a 1660 4828 a
 tx@Dict begin PutEnd  end
 1660 4828 a 1660
4828 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aReligioncountry /N@xReligioncountry InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1660 4828 a 987 4928 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aReligionname
16 {InitRnode } NewNode end end
 987 4928 a 83 w Fb(name)1660
4928 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bReligionname
16 {InitRnode } NewNode end end
 1660 4928 a 987 5028 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aReligionpercentage
16 {InitRnode } NewNode end end
 987 5028 a 83 w Fb(p)r(ercen)n(tage)1660
5028 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bReligionpercentage
16 {InitRnode } NewNode end end
 1660 5028 a 955 5290 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@Ethnic 16 {InitRnode } NewNode end end
 955 5290 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(Ethnic)p 1351 5290 29
4 v 34 w(Group)987 5415 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aEthniccountry 16 {InitRnode } NewNode end end
 987 5415 a Fa(\001)g Fb(coun)n(try)1660
5415 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEthniccountry
16 {InitRnode } NewNode end end
 1660 5415 a 1660 5415 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aEthniccountry known
{ /N@aEthniccountry load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 1660 5415 a 1660 5415
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 1660 5415 a 1660 5415 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xEthniccountry
16 {InitRnode } NewNode end end
 1660 5415 a 1660 5415 a
 tx@Dict begin PutEnd  end
 1660
5415 a 1660 5415 a
 tx@Dict begin PutEnd  end
 1660 5415 a 1660 5415 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aEthniccountry /N@xEthniccountry InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1660 5415
a 987 5514 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aEthnicname
16 {InitRnode } NewNode end end
 987 5514 a 83 w Fb(name)1660 5514 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEthnicname
16 {InitRnode } NewNode end end
 1660
5514 a 987 5614 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aEthnicpercentage
16 {InitRnode } NewNode end end
 987 5614 a 83 w Fb(p)r(ercen)n(tage)1660
5614 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bEthnicpercentage
16 {InitRnode } NewNode end end
 1660 5614 a -234 5875 a Fb(T)-7 b(ransitiv)n(e)25
b(dep)r(endencies)i(are)f(omitted.)2086 1570 y
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@geolake 16 {InitRnode } NewNode end end
 2086 1570
a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(geo)p
2347 1570 29 4 v 33 w(lak)m(e)2118 1694 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ageolakelake
16 {InitRnode } NewNode end end
 2118 1694 a
83 w Fb(lak)n(e)2791 1694 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bgeolakelake 16 {InitRnode } NewNode end end
 2791 1694 a Fa(\003)2856
1694 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bgeolakelake known
{ /N@bgeolakelake load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 2856 1694 a 2856 1694 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2856 1694 a 2856 1694
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ygeolakelake
16 {InitRnode } NewNode end end
 2856 1694 a 2856 1694 a
 tx@Dict begin PutEnd  end
 2856 1694 a 2856 1694 a
 tx@Dict begin PutEnd  end
 2856
1694 a 2856 1694 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bgeolakelake /N@ygeolakelake InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2856 1694 a 2118 1794 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageolakecountry 16 {InitRnode } NewNode end end
 2118 1794
a Fa(\001)18 b Fb(coun)n(try)2791 1794 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeolakecountry
16 {InitRnode } NewNode end end
 2791 1794 a
2791 1794 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageolakecountry known
{ /N@ageolakecountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 2791 1794 a 2791 1794 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 1794 a 2791
1794 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeolakecountry
16 {InitRnode } NewNode end end
 2791 1794 a 2791 1794 a
 tx@Dict begin PutEnd  end
 2791 1794 a 2791 1794
a
 tx@Dict begin PutEnd  end
 2791 1794 a 2791 1794 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageolakecountry /N@xgeolakecountry InitNC { NCLine  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 1794 a 2118 1893 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageolakeprovince 16 {InitRnode } NewNode end end
 2118
1893 a Fa(\001)g Fb(pro)n(vince)2791 1893 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeolakeprovince
16 {InitRnode } NewNode end end
 2791 1893
a 2791 1893 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageolakeprovince
known { /N@ageolakeprovince load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 2791 1893 a 2791 1893 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 1893 a 2791
1893 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeolakeprovince
16 {InitRnode } NewNode end end
 2791 1893 a 2791 1893 a
 tx@Dict begin PutEnd  end
 2791 1893 a 2791 1893
a
 tx@Dict begin PutEnd  end
 2791 1893 a 2791 1893 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageolakeprovince /N@xgeolakeprovince InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 1893 a 3196 1570 a
 tx@Dict begin tx@NodeDict begin {12.19997 34.40004 96.73193 48.36597
-11.10004 } false /N@Lake 16 {InitRnode } NewNode end end
 3196
1570 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 34.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83
w Fc(Lak)m(e)3228 1694 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aLakename 16 {InitRnode } NewNode end end
 3228 1694 a Fa(\003)g Fb(name)3902
1694 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bLakename
16 {InitRnode } NewNode end end
 3902 1694 a 3902 1694 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aLakename known {
/N@aLakename load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 1694 a 3902 1694
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 1694 a 3902 1694 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xLakename
16 {InitRnode } NewNode end end
 3902 1694 a 3902 1694 a
 tx@Dict begin PutEnd  end
 3902
1694 a 3902 1694 a
 tx@Dict begin PutEnd  end
 3902 1694 a 3902 1694 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aLakename /N@xLakename InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 1694
a 3228 1794 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aLakearea
16 {InitRnode } NewNode end end
 3228 1794 a 83 w Fb(area)3902 1794 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bLakearea
16 {InitRnode } NewNode end end
 3902
1794 a 2086 2106 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@georiver 16 {InitRnode } NewNode end end
 2086 2106 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 83 w Fc(geo)p 2347 2106 29 4 v 33 w(riv)m(er)2118
2230 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ageoriverriver
16 {InitRnode } NewNode end end
 2118 2230 a 83 w Fb(riv)n(er)2791 2230 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bgeoriverriver 16 {InitRnode } NewNode end end
 2791
2230 a Fa(\003)2856 2230 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bgeoriverriver known
{ /N@bgeoriverriver load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 2856 2230 a 2856 2230 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2856
2230 a 2856 2230 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ygeoriverriver
16 {InitRnode } NewNode end end
 2856 2230 a 2856 2230 a
 tx@Dict begin PutEnd  end
 2856 2230
a 2856 2230 a
 tx@Dict begin PutEnd  end
 2856 2230 a 2856 2230 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bgeoriverriver /N@ygeoriverriver InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2856 2230 a 2118
2330 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageorivercountry 16 {InitRnode } NewNode end end
 2118 2330 a Fa(\001)g Fb(coun)n(try)2791 2330
y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeorivercountry
16 {InitRnode } NewNode end end
 2791 2330 a 2791 2330 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageorivercountry
known { /N@ageorivercountry load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 2791 2330 a 2791 2330 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791
2330 a 2791 2330 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeorivercountry
16 {InitRnode } NewNode end end
 2791 2330 a 2791 2330 a
 tx@Dict begin PutEnd  end
 2791 2330
a 2791 2330 a
 tx@Dict begin PutEnd  end
 2791 2330 a 2791 2330 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageorivercountry /N@xgeorivercountry InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 2330 a 2118
2430 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageoriverprovince 16 {InitRnode } NewNode end end
 2118 2430 a Fa(\001)g Fb(pro)n(vince)2791 2430
y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeoriverprovince
16 {InitRnode } NewNode end end
 2791 2430 a 2791 2430 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageoriverprovince
known { /N@ageoriverprovince load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 2791 2430 a 2791 2430 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791
2430 a 2791 2430 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeoriverprovince
16 {InitRnode } NewNode end end
 2791 2430 a 2791 2430 a
 tx@Dict begin PutEnd  end
 2791 2430
a 2791 2430 a
 tx@Dict begin PutEnd  end
 2791 2430 a 2791 2430 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageoriverprovince /N@xgeoriverprovince InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 2430 a 3196
2106 a
 tx@Dict begin tx@NodeDict begin {12.19997 70.40004 96.73193 48.36597
-29.10004 } false /N@River 16 {InitRnode } NewNode end end
 3196 2106 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 70.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
83 w Fc(Riv)m(er)3228 2230 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aRivername 16 {InitRnode } NewNode end end
 3228 2230 a Fa(\003)g Fb(name)3902
2230 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bRivername
16 {InitRnode } NewNode end end
 3902 2230 a 3902 2230 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aRivername known
{ /N@aRivername load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 2230 a 3902 2230
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 2230 a 3902 2230 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xRivername
16 {InitRnode } NewNode end end
 3902 2230 a 3902 2230 a
 tx@Dict begin PutEnd  end
 3902
2230 a 3902 2230 a
 tx@Dict begin PutEnd  end
 3902 2230 a 3902 2230 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aRivername /N@xRivername InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 2230
a 3228 2330 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aRiverlength
16 {InitRnode } NewNode end end
 3228 2330 a 83 w Fb(length)3902 2330 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bRiverlength
16 {InitRnode } NewNode end end

3902 2330 a 3228 2430 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aRiverriver 16 {InitRnode } NewNode end end
 3228 2430 a Fa(\001)g Fb(riv)n(er)3902
2430 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bRiverriver
16 {InitRnode } NewNode end end
 3902 2430 a 3902 2430 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aRiverriver known
{ /N@aRiverriver load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 2430 a 3902 2430
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 2430 a 3902 2430 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xRiverriver
16 {InitRnode } NewNode end end
 3902 2430 a 3902 2430 a
 tx@Dict begin PutEnd  end
 3902
2430 a 3902 2430 a
 tx@Dict begin PutEnd  end
 3902 2430 a 3902 2430 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aRiverriver /N@xRiverriver InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 2430
a 3228 2529 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aRiverlake 16 {InitRnode } NewNode end end
 3228 2529 a Fa(\001)g Fb(lak)n(e)3902 2529
y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bRiverlake
16 {InitRnode } NewNode end end
 3902 2529 a 3902 2529 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aRiverlake known
{ /N@aRiverlake load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 2529 a 3902 2529 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902
2529 a 3902 2529 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xRiverlake
16 {InitRnode } NewNode end end
 3902 2529 a 3902 2529 a
 tx@Dict begin PutEnd  end
 3902 2529
a 3902 2529 a
 tx@Dict begin PutEnd  end
 3902 2529 a 3902 2529 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aRiverlake /N@xRiverlake InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 2529 a 3228
2629 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aRiversea 16 {InitRnode } NewNode end end
 3228 2629 a Fa(\001)g Fb(sea)3902 2629 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bRiversea
16 {InitRnode } NewNode end end
 3902
2629 a 3902 2629 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aRiversea known {
/N@aRiversea load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 2629 a 3902 2629 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 2629
a 3902 2629 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xRiversea
16 {InitRnode } NewNode end end
 3902 2629 a 3902 2629 a
 tx@Dict begin PutEnd  end
 3902 2629 a 3902
2629 a
 tx@Dict begin PutEnd  end
 3902 2629 a 3902 2629 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aRiversea /N@xRiversea InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 2629 a 2086 2841
a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@geosea 16 {InitRnode } NewNode end end
 2086 2841 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
83 w Fc(geo)p 2347 2841 29 4 v 33 w(sea)2118 2966 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ageoseasea
16 {InitRnode } NewNode end end
 2118
2966 a 83 w Fb(sea)2791 2966 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bgeoseasea 16 {InitRnode } NewNode end end
 2791 2966 a Fa(\003)2856
2966 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bgeoseasea known
{ /N@bgeoseasea load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 2856 2966 a 2856 2966 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2856 2966 a 2856 2966
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ygeoseasea
16 {InitRnode } NewNode end end
 2856 2966 a 2856 2966 a
 tx@Dict begin PutEnd  end
 2856 2966 a 2856 2966 a
 tx@Dict begin PutEnd  end
 2856
2966 a 2856 2966 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bgeoseasea /N@ygeoseasea InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2856 2966 a 2118 3066 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageoseacountry 16 {InitRnode } NewNode end end
 2118 3066
a Fa(\001)g Fb(coun)n(try)2791 3066 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeoseacountry
16 {InitRnode } NewNode end end
 2791 3066 a 2791
3066 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageoseacountry known
{ /N@ageoseacountry load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 2791 3066 a 2791 3066 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 3066 a 2791 3066
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeoseacountry
16 {InitRnode } NewNode end end
 2791 3066 a 2791 3066 a
 tx@Dict begin PutEnd  end
 2791 3066 a 2791 3066 a
 tx@Dict begin PutEnd  end
 2791
3066 a 2791 3066 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageoseacountry /N@xgeoseacountry InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2791 3066 a 2118 3165 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageoseaprovince 16 {InitRnode } NewNode end end
 2118 3165
a Fa(\001)g Fb(pro)n(vince)2791 3165 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeoseaprovince
16 {InitRnode } NewNode end end
 2791 3165 a 2791
3165 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageoseaprovince known
{ /N@ageoseaprovince load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 2791 3165 a 2791 3165 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 3165 a 2791 3165
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeoseaprovince
16 {InitRnode } NewNode end end
 2791 3165 a 2791 3165 a
 tx@Dict begin PutEnd  end
 2791 3165 a 2791 3165 a
 tx@Dict begin PutEnd  end
 2791
3165 a 2791 3165 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageoseaprovince /N@xgeoseaprovince InitNC { NCLine  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 3165 a 3196 2841 a
 tx@Dict begin tx@NodeDict begin {12.19997 34.40004 96.73193 48.36597
-11.10004 } false /N@Sea 16 {InitRnode } NewNode end end
 3196 2841
a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 34.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(Sea)3228
2966 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aSeaname 16 {InitRnode } NewNode end end
 3228 2966 a Fa(\003)g Fb(name)3902 2966 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bSeaname
16 {InitRnode } NewNode end end
 3902
2966 a 3902 2966 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aSeaname known {
/N@aSeaname load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 2966 a 3902 2966 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 2966
a 3902 2966 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xSeaname
16 {InitRnode } NewNode end end
 3902 2966 a 3902 2966 a
 tx@Dict begin PutEnd  end
 3902 2966 a 3902
2966 a
 tx@Dict begin PutEnd  end
 3902 2966 a 3902 2966 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aSeaname /N@xSeaname InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 2966 a 3228 3066
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aSeadepth
16 {InitRnode } NewNode end end
 3228 3066 a 83 w Fb(depth)3902 3066 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bSeadepth
16 {InitRnode } NewNode end end
 3902 3066 a 3196
3328 a
 tx@Dict begin tx@NodeDict begin {12.19997 34.40004 96.73193 48.36597
-11.10004 } false /N@merges 16 {InitRnode } NewNode end end
 3196 3328 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 34.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
83 w Fc(merges)p 3611 3328 29 4 v 32 w(with)3228 3452
y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@amergessea1 16 {InitRnode } NewNode end end
 3228 3452 a Fa(\001)g Fb(sea1)3902 3452 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bmergessea1
16 {InitRnode } NewNode end end
 3902 3452
a 3902 3452 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@amergessea1 known
{ /N@amergessea1 load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 3452 a 3902 3452 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 3452 a 3902
3452 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xmergessea1
16 {InitRnode } NewNode end end
 3902 3452 a 3902 3452 a
 tx@Dict begin PutEnd  end
 3902 3452 a 3902 3452
a
 tx@Dict begin PutEnd  end
 3902 3452 a 3902 3452 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@amergessea1 /N@xmergessea1 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 3452 a 3228 3552 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@amergessea2 16 {InitRnode } NewNode end end
 3228
3552 a Fa(\001)g Fb(sea2)3902 3552 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bmergessea2
16 {InitRnode } NewNode end end
 3902 3552 a 3902
3552 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@amergessea2 known
{ /N@amergessea2 load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 3552 a 3902 3552 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 3552 a 3902 3552
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xmergessea2
16 {InitRnode } NewNode end end
 3902 3552 a 3902 3552 a
 tx@Dict begin PutEnd  end
 3902 3552 a 3902 3552 a
 tx@Dict begin PutEnd  end
 3902
3552 a 3902 3552 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@amergessea2 /N@xmergessea2 InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 3552 a 2086 3765 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@geoisland 16 {InitRnode } NewNode end end
 2086 3765
a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(geo)p
2347 3765 29 4 v 33 w(island)2118 3889 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ageoislandisland
16 {InitRnode } NewNode end end
 2118 3889 a
83 w Fb(island)2791 3889 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bgeoislandisland 16 {InitRnode } NewNode end end
 2791 3889 a Fa(\003)2856 3889
y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bgeoislandisland
known { /N@bgeoislandisland load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 2856 3889 a 2856 3889 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2856 3889 a 2856 3889 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ygeoislandisland
16 {InitRnode } NewNode end end
 2856
3889 a 2856 3889 a
 tx@Dict begin PutEnd  end
 2856 3889 a 2856 3889 a
 tx@Dict begin PutEnd  end
 2856 3889
a 2856 3889 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bgeoislandisland /N@ygeoislandisland InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2856 3889 a 2118 3989 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageoislandcountry 16 {InitRnode } NewNode end end
 2118 3989 a Fa(\001)g
Fb(coun)n(try)2791 3989 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeoislandcountry
16 {InitRnode } NewNode end end
 2791 3989 a 2791 3989 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageoislandcountry
known { /N@ageoislandcountry load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 2791
3989 a 2791 3989 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 3989 a 2791 3989 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeoislandcountry
16 {InitRnode } NewNode end end
 2791 3989
a 2791 3989 a
 tx@Dict begin PutEnd  end
 2791 3989 a 2791 3989 a
 tx@Dict begin PutEnd  end
 2791 3989 a 2791
3989 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageoislandcountry /N@xgeoislandcountry InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 3989 a 2118 4088 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageoislandprovince 16 {InitRnode } NewNode end end
 2118 4088 a Fa(\001)g
Fb(pro)n(vince)2791 4088 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeoislandprovince
16 {InitRnode } NewNode end end
 2791 4088 a 2791 4088 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageoislandprovince
known { /N@ageoislandprovince load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 2791
4088 a 2791 4088 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 4088 a 2791 4088 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeoislandprovince
16 {InitRnode } NewNode end end
 2791 4088
a 2791 4088 a
 tx@Dict begin PutEnd  end
 2791 4088 a 2791 4088 a
 tx@Dict begin PutEnd  end
 2791 4088 a 2791
4088 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageoislandprovince /N@xgeoislandprovince InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 4088 a 3196 3765 a
 tx@Dict begin tx@NodeDict begin {12.19997 58.40004 96.73193 48.36597
-23.10004 } false /N@Island 16 {InitRnode } NewNode end end
 3196 3765 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 58.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(Island)3228 3889 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aIslandname 16 {InitRnode } NewNode end end
 3228
3889 a Fa(\003)g Fb(name)3902 3889 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bIslandname
16 {InitRnode } NewNode end end
 3902 3889 a 3902
3889 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aIslandname known
{ /N@aIslandname load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 3889 a 3902 3889 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 3889 a 3902 3889
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xIslandname
16 {InitRnode } NewNode end end
 3902 3889 a 3902 3889 a
 tx@Dict begin PutEnd  end
 3902 3889 a 3902 3889 a
 tx@Dict begin PutEnd  end
 3902
3889 a 3902 3889 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aIslandname /N@xIslandname InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 3889 a 3228 3989 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aIslandislands
16 {InitRnode } NewNode end end
 3228 3989
a 83 w Fb(islands)3902 3989 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bIslandislands
16 {InitRnode } NewNode end end
 3902 3989 a 3228 4088 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aIslandarea
16 {InitRnode } NewNode end end

3228 4088 a 83 w Fb(area)3902 4088 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bIslandarea
16 {InitRnode } NewNode end end
 3902 4088 a 3228
4188 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aIslandcoordinates
16 {InitRnode } NewNode end end
 3228 4188 a 83 w Fb(co)r(ordinates)3902 4188 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bIslandcoordinates
16 {InitRnode } NewNode end end

3902 4188 a 2086 4401 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@geomountain 16 {InitRnode } NewNode end end
 2086 4401 a 32 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial 83 w Fc(geo)p 2347 4401 29 4
v 33 w(moun)m(tain)2118 4525 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ageomountainmountain
16 {InitRnode } NewNode end end
 2118 4525 a 83 w Fb(moun)n(tain)2791
4525 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bgeomountainmountain 16 {InitRnode } NewNode end end
 2791 4525 a Fa(\003)2856 4525 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bgeomountainmountain
known { /N@bgeomountainmountain load GetCenter } { 0 0 } ifelse end
} PutCoor PutBegin  end
 2856 4525 a 2856
4525 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2856 4525 a 2856 4525 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ygeomountainmountain
16 {InitRnode } NewNode end end
 2856 4525 a 2856 4525
a
 tx@Dict begin PutEnd  end
 2856 4525 a 2856 4525 a
 tx@Dict begin PutEnd  end
 2856 4525 a 2856 4525 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bgeomountainmountain /N@ygeomountainmountain InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2856
4525 a 2118 4625 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageomountaincountry 16 {InitRnode } NewNode end end
 2118 4625 a Fa(\001)g Fb(coun)n(try)2791
4625 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeomountaincountry
16 {InitRnode } NewNode end end
 2791 4625 a 2791 4625 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageomountaincountry
known { /N@ageomountaincountry load GetCenter } { 0 0 } ifelse end
} PutCoor PutBegin  end
 2791 4625 a 2791 4625
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 4625 a 2791 4625 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeomountaincountry
16 {InitRnode } NewNode end end
 2791 4625 a 2791 4625 a
 tx@Dict begin PutEnd  end
 2791
4625 a 2791 4625 a
 tx@Dict begin PutEnd  end
 2791 4625 a 2791 4625 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageomountaincountry /N@xgeomountaincountry InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 4625
a 2118 4724 a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageomountainprovince 16 {InitRnode } NewNode end end
 2118 4724 a Fa(\001)g Fb(pro)n(vince)2791
4724 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeomountainprovince
16 {InitRnode } NewNode end end
 2791 4724 a 2791 4724 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageomountainprovince
known { /N@ageomountainprovince load GetCenter } { 0 0 } ifelse end
} PutCoor PutBegin  end
 2791 4724 a 2791 4724
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 4724 a 2791 4724 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeomountainprovince
16 {InitRnode } NewNode end end
 2791 4724 a 2791 4724 a
 tx@Dict begin PutEnd  end
 2791
4724 a 2791 4724 a
 tx@Dict begin PutEnd  end
 2791 4724 a 2791 4724 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageomountainprovince /N@xgeomountainprovince InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 4724
a 3196 4401 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@Mountain 16 {InitRnode } NewNode end end
 3196 4401 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 83 w Fc(Moun)m(tain)3228 4525 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aMountainname 16 {InitRnode } NewNode end end
 3228 4525
a Fa(\003)g Fb(name)3902 4525 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bMountainname
16 {InitRnode } NewNode end end
 3902 4525 a 3902 4525
a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aMountainname known
{ /N@aMountainname load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 4525 a 3902 4525 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 4525 a 3902 4525 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xMountainname
16 {InitRnode } NewNode end end
 3902
4525 a 3902 4525 a
 tx@Dict begin PutEnd  end
 3902 4525 a 3902 4525 a
 tx@Dict begin PutEnd  end
 3902 4525
a 3902 4525 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aMountainname /N@xMountainname InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 4525 a 3228 4625 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aMountainheight
16 {InitRnode } NewNode end end
 3228 4625 a 83
w Fb(heigh)n(t)3902 4625 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bMountainheight
16 {InitRnode } NewNode end end
 3902 4625 a 3228 4724 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aMountaincoordinates
16 {InitRnode } NewNode end end
 3228
4724 a 83 w Fb(co)r(ordinates)3902 4724 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bMountaincoordinates
16 {InitRnode } NewNode end end
 3902 4724 a
2086 4937 a
 tx@Dict begin tx@NodeDict begin {12.19997 46.40004 96.73193 48.36597
-17.10004 } false /N@geodesert 16 {InitRnode } NewNode end end
 2086 4937 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 46.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 83 w Fc(geo)p 2347 4937 29 4 v 33 w(desert)2118
5061 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ageodesertdesert
16 {InitRnode } NewNode end end
 2118 5061 a 83 w Fb(desert)2791 5061 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bgeodesertdesert 16 {InitRnode } NewNode end end
 2791 5061
a Fa(\003)2856 5061 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bgeodesertdesert
known { /N@bgeodesertdesert load GetCenter } { 0 0 } ifelse end } PutCoor
PutBegin  end
 2856 5061 a 2856 5061 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2856 5061
a 2856 5061 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ygeodesertdesert
16 {InitRnode } NewNode end end
 2856 5061 a 2856 5061 a
 tx@Dict begin PutEnd  end
 2856 5061 a 2856
5061 a
 tx@Dict begin PutEnd  end
 2856 5061 a 2856 5061 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bgeodesertdesert /N@ygeodesertdesert InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2856 5061 a 2118 5161
a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageodesertcountry 16 {InitRnode } NewNode end end
 2118 5161 a Fa(\001)g Fb(coun)n(try)2791 5161 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeodesertcountry
16 {InitRnode } NewNode end end
 2791
5161 a 2791 5161 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageodesertcountry
known { /N@ageodesertcountry load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 2791 5161 a 2791 5161 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 5161
a 2791 5161 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeodesertcountry
16 {InitRnode } NewNode end end
 2791 5161 a 2791 5161 a
 tx@Dict begin PutEnd  end
 2791 5161 a 2791
5161 a
 tx@Dict begin PutEnd  end
 2791 5161 a 2791 5161 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageodesertcountry /N@xgeodesertcountry InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 5161 a 2118 5261
a
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@ageodesertprovince 16 {InitRnode } NewNode end end
 2118 5261 a Fa(\001)g Fb(pro)n(vince)2791 5261 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bgeodesertprovince
16 {InitRnode } NewNode end end
 2791
5261 a 2791 5261 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@ageodesertprovince
known { /N@ageodesertprovince load GetCenter } { 0 0 } ifelse end }
PutCoor PutBegin  end
 2791 5261 a 2791 5261 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 5261
a 2791 5261 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeodesertprovince
16 {InitRnode } NewNode end end
 2791 5261 a 2791 5261 a
 tx@Dict begin PutEnd  end
 2791 5261 a 2791
5261 a
 tx@Dict begin PutEnd  end
 2791 5261 a 2791 5261 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ageodesertprovince /N@xgeodesertprovince InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 5261 a 3196 4937
a
 tx@Dict begin tx@NodeDict begin {12.19997 34.40004 96.73193 48.36597
-11.10004 } false /N@Desert 16 {InitRnode } NewNode end end
 3196 4937 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 34.40004
neg 92.93193 12.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end
 
@endspecial
83 w Fc(Desert)3228 5061 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aDesertname 16 {InitRnode } NewNode end end
 3228 5061 a Fa(\003)g Fb(name)3902
5061 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bDesertname
16 {InitRnode } NewNode end end
 3902 5061 a 3902 5061 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aDesertname known
{ /N@aDesertname load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 5061 a 3902 5061
a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 5061 a 3902 5061 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xDesertname
16 {InitRnode } NewNode end end
 3902 5061 a 3902 5061 a
 tx@Dict begin PutEnd  end
 3902
5061 a 3902 5061 a
 tx@Dict begin PutEnd  end
 3902 5061 a 3902 5061 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aDesertname /N@xDesertname InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 5061
a 3228 5161 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aDesertarea
16 {InitRnode } NewNode end end
 3228 5161 a 83 w Fb(area)3902 5161 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bDesertarea
16 {InitRnode } NewNode end end
 3902
5161 a 2086 5797 a
 tx@Dict begin tx@NodeDict begin {51.19997 7.40004 96.73193 48.36597
21.89996 } false /N@encompasses 16 {InitRnode } NewNode end end
 2086 5797 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 7.40004
neg 92.93193 51.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 2201 5473 a Fc(encompasses)2118 5598 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aencompassescountry 16 {InitRnode } NewNode end end
 2118
5598 a Fa(\001)g Fb(coun)n(try)2791 5598 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bencompassescountry
16 {InitRnode } NewNode end end
 2791 5598
a 2791 5598 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aencompassescountry
known { /N@aencompassescountry load GetCenter } { 0 0 } ifelse end
} PutCoor PutBegin  end
 2791 5598 a 2791 5598 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 2791 5598 a 2791
5598 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xencompassescountry
16 {InitRnode } NewNode end end
 2791 5598 a 2791 5598 a
 tx@Dict begin PutEnd  end
 2791 5598 a 2791 5598
a
 tx@Dict begin PutEnd  end
 2791 5598 a 2791 5598 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aencompassescountry /N@xencompassescountry InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2791 5598 a 2118 5697 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aencompassescontinent
16 {InitRnode } NewNode end end
 2118
5697 a 83 w Fb(con)n(tinen)n(t)2791 5697 y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@bencompassescontinent 16 {InitRnode } NewNode end end
 2791 5697
a Fa(\003)2856 5697 y
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@bencompassescontinent
known { /N@bencompassescontinent load GetCenter } { 0 0 } ifelse end
} PutCoor PutBegin  end
 2856 5697 a 2856 5697 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin
 end
 2856 5697
a 2856 5697 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@yencompassescontinent
16 {InitRnode } NewNode end end
 2856 5697 a 2856 5697 a
 tx@Dict begin PutEnd  end
 2856 5697 a 2856
5697 a
 tx@Dict begin PutEnd  end
 2856 5697 a 2856 5697 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@bencompassescontinent /N@yencompassescontinent InitNC {
NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 2856 5697 a 2118 5797
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aencompassespercentage
16 {InitRnode } NewNode end end
 2118 5797 a 83 w Fb(p)r(ercen)n(tage)2791 5797 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bencompassespercentage
16 {InitRnode } NewNode end end
 2791
5797 a 3196 5797 a
 tx@Dict begin tx@NodeDict begin {39.19997 7.40004 96.73193 48.36597
15.89996 } false /N@Continent 16 {InitRnode } NewNode end end
 3196 5797 a 32 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0. true 3.8 neg 7.40004
neg 92.93193 39.19997 .5 Frame  gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore end


@endspecial 3311 5573 a Fc(Con)m(tinen)m(t)3228 5697
y
 tx@Dict begin tx@NodeDict begin {5.39098 0.39098 7.7778 3.8889 2.5
} false /N@aContinentname 16 {InitRnode } NewNode end end
 3228 5697 a Fa(\003)g Fb(name)3902 5697 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bContinentname
16 {InitRnode } NewNode end end
 3902 5697
a 3902 5697 a
 tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@aContinentname known
{ /N@aContinentname load GetCenter } { 0 0 } ifelse end } PutCoor PutBegin
 end
 3902 5697 a 3902 5697 a
 tx@Dict begin { 18.00005 0.0 0.0 0.0 180.  Uput UUput } PutCoor PutBegin
 end
 3902 5697 a 3902
5697 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xContinentname
16 {InitRnode } NewNode end end
 3902 5697 a 3902 5697 a
 tx@Dict begin PutEnd  end
 3902 5697 a 3902 5697
a
 tx@Dict begin PutEnd  end
 3902 5697 a 3902 5697 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@aContinentname /N@xContinentname InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 3902 5697 a 3228 5797 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@aContinentarea
16 {InitRnode } NewNode end end
 3228
5797 a 83 w Fb(area)3902 5797 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@bContinentarea
16 {InitRnode } NewNode end end
 3902 5797 a -159 5913
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@yOrganizationcity
/N@yOrganizationprovince InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 -159 5913 a -159 5913 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@yCountrycode /N@yCountryprovince
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 5913 a -159 5913 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xlocatedcity /N@xlocatedprovince
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159
5913 a -159 5913 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xCityname /N@xCityprovince
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 5913 a -159 5913 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xProvincecountry2
/N@xProvincecapprov InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 5913
a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@yCitycountry /N@yCityprovince
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012 a -159
6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ygeocity
16 {InitRnode } NewNode end end
 -159 6012 a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@yProvincename
/N@yProvincecountry InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@ygeoprovince
16 {InitRnode } NewNode end end
 -159
6012 a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xgeolakecountry
/N@xgeolakeprovince InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 6012
a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeolake
16 {InitRnode } NewNode end end
 -159 6012 a -159
6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xgeorivercountry
/N@xgeoriverprovince InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeoriver
16 {InitRnode } NewNode end end
 -159 6012 a -159 6012 a
 tx@Dict begin PutEnd  end
 -159
6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xgeoseacountry
/N@xgeoseaprovince InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012
a -159 6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeosea
16 {InitRnode } NewNode end end
 -159 6012 a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159
6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xgeoislandcountry
/N@xgeoislandprovince InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012 a -159 6012
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeoisland
16 {InitRnode } NewNode end end
 -159 6012 a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xgeomountaincountry
/N@xgeomountainprovince InitNC { NCLine  } if end gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore  grestore end
 -159
6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeomountain
16 {InitRnode } NewNode end end
 -159 6012
a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xgeodesertcountry
/N@xgeodesertprovince InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159
6012 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@xgeodesert
16 {InitRnode } NewNode end end
 -159 6012 a -159 6012
a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@xOrganizationabbreviation /N@xMembershiporganization InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {false} false /DS 1.8 1.8
CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xMembershipcountry /N@xCountrycode
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159
6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {false} false /DS 1.8 1.8
CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xMembershipcountry /N@xborderscountry1
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {false} false /DS 1.8 1.8
CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xMembershipcountry /N@xborderscountry2
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012
a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {false} false /DS 1.8 1.8
CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xMembershipcountry /N@xEconomycountry
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t 0.86 def LPut end PutBegin  end
 -159 6012 a -159
6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@Abzweig1
16 {InitRnode } NewNode end end
 -159 6012 a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {false} false /DS 1.8 1.8
CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xMembershipcountry /N@xPopulationcountry
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@xMembershipcountry /N@xPoliticscountry InitNC { NCLine 
} if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@xCountrycode /N@xProvincecountry InitNC { tx@Dict begin
/Lineto /lineto load def false pop end /AngleA 180. def /AngleB 180.
def /ArmA 0.0 def /ArmB 10.0 def /ArmTypeA 0 def /ArmTypeB 0 def /AngleB
180. def NCBar  } if end  grestore end
 -159
6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t 2. def LPut end PutBegin  end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@AbzweigProv
16 {InitRnode } NewNode end end
 -159 6012
a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { } def /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@AbzweigProv /N@xProvincecountry InitNC {
NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 -159 6012 a -159
6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { } def /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Abzweig1 /N@xLanguagecountry InitNC { tx@Dict
begin /Lineto /lineto load def false pop end /AngleA 0. def /AngleB
0. def /ArmA 10.0 def /ArmB 0.0 def /ArmTypeA 0 def /ArmTypeB 0 def
NCAngle  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t 1. def LPut end PutBegin  end
 -159 6012 a -159 6012
a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@Abzweig2
16 {InitRnode } NewNode end end
 -159 6012 a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { } def /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Abzweig2 /N@xencompassescountry InitNC {
tx@Dict begin /Lineto /lineto load def false pop end /AngleA 0. def
/AngleB 180. def /ArmA 10.0 def /ArmB 20.00003 def /ArmTypeA 0 def
/ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 -159
6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xCitycountry /N@yOrganizationcountry
InitNC { tx@Dict begin /Lineto /lineto load def false pop end /AngleA
180. def /AngleB 0. def /ArmA 5.0 def /ArmB 10.0 def /ArmTypeA 0 def
/ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xProvincecapital
/N@yOrganizationcountry InitNC { tx@Dict begin /Lineto /lineto load
def false pop end /AngleA 180. def /AngleB 0. def /ArmA 5.0 def /ArmB
10.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 -159 6012
a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xlocatedcountry
/N@yCountrycapital InitNC { tx@Dict begin /Lineto /lineto load def
false pop end /AngleA 180. def /AngleB 0. def /ArmA 5.0 def /ArmB 10.0
def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW
0. setgray 0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@ygeocity /N@xgeoriver
InitNC { tx@Dict begin /Lineto /lineto load def false pop end /AngleA
0. def /AngleB 180. def /ArmA 5.39993 def /ArmB 10.0 def /ArmTypeA
0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -159 6012 a -159
6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@ygeoprovince /N@xgeolake
InitNC { tx@Dict begin /Lineto /lineto load def false pop end /AngleA
0. def /AngleB 180. def /ArmA 5.39993 def /ArmB 10.0 def /ArmTypeA
0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@ygeoprovince /N@xgeosea
InitNC { tx@Dict begin /Lineto /lineto load def false pop end /AngleA
0. def /AngleB 180. def /ArmA 5.39993 def /ArmB 10.0 def /ArmTypeA
0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@ygeoprovince /N@xgeoisland
InitNC { tx@Dict begin /Lineto /lineto load def false pop end /AngleA
0. def /AngleB 180. def /ArmA 5.39993 def /ArmB 10.0 def /ArmTypeA
0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@ygeoprovince /N@xgeomountain
InitNC { tx@Dict begin /Lineto /lineto load def false pop end /AngleA
0. def /AngleB 180. def /ArmA 5.39993 def /ArmB 10.0 def /ArmTypeA
0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@ygeoprovince /N@xgeodesert
InitNC { tx@Dict begin /Lineto /lineto load def false pop end /AngleA
0. def /AngleB 180. def /ArmA 5.39993 def /ArmB 10.0 def /ArmTypeA
0 def /ArmTypeB 0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -159
6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xLanguagecountry
/N@xReligioncountry InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xLanguagecountry
/N@xEthniccountry InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 -159 6012
a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ygeolakelake /N@xLakename InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -159 6012 a -159
6012 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 0.0 } false /N@middlelake
16 {InitRnode } NewNode end end
 -159 6012 a -159 6012 a
 tx@Dict begin PutEnd  end
 -159 6012 a -159 6012
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ygeoriverriver /N@xRivername InitNC { NCLine  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ygeoseasea /N@xSeaname InitNC { NCLine  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ygeoislandisland /N@xIslandname InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 -159
6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ygeomountainmountain /N@xMountainname InitNC { NCLine  }
if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ygeodesertdesert /N@xDesertname InitNC { NCLine  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 -159 6012
a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@yencompassescontinent /N@xContinentname InitNC { NCLine
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xRiverriver /N@xRivername
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159
6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xRiversea /N@xSeaname
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xRiversea /N@xSeaname
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159 6012
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { BeginArrow
1.  1.  scale {false} false /DS 1.8 1.8 CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale {false}
false /DS 1.8 1.8 CLW mul add 2 div def EndDot  EndArrow  } def /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xmergessea1 /N@xSeaname
InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {false} false /DS 1.8 1.8
CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xmergessea2 /N@ygeoseasea InitNC {
tx@Dict begin /Lineto /lineto load def false pop end /AngleA 0. def
/AngleB 0. def /ArmA 10.0 def /ArmB 0.0 def /ArmTypeA 0 def /ArmTypeB
0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale {false} false /DS 1.8 1.8
CLW mul add 2 div def EndDot  EndArrow  } def /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@xRiverlake /N@middlelake InitNC {
tx@Dict begin /Lineto /lineto load def false pop end /AngleA 0. def
/AngleB 0. def /ArmA 10.0 def /ArmB 0.0 def /ArmTypeA 0 def /ArmTypeB
0 def NCAngle  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -159
6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ylocatedriver /N@xRivername InitNC { tx@Dict begin /Lineto
/lineto load def false pop end /AngleA 0. def /AngleB 180. def /ArmA
10.0 def /ArmB 0.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 -159 6012 a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ylocatedlake /N@middlelake InitNC { tx@Dict begin /Lineto
/lineto load def false pop end /AngleA 0. def /AngleB 180. def /ArmA
10.0 def /ArmB 0.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 -159 6012
a -159 6012 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@ylocatedsea /N@ygeoseasea InitNC { tx@Dict begin /Lineto
/lineto load def false pop end /AngleA 0. def /AngleB 180. def /ArmA
10.0 def /ArmB 0.0 def /ArmTypeA 0 def /ArmTypeB 0 def NCAngle  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 -159 6012 a Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
